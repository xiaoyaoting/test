/**
 * List all query method names
 *
 * @name ABTNodeClient#getQueries
 * @function
 * @memberof ABTNodeClient
 * @returns {Array<string>} method name list
 * @example
 * const methods = client.getQueries();
 * // list of query methods
 * // [
 * //   getBlocklet,
 * //   getBlockletMetaFromUrl,
 * //   getBlockletByBundle,
 * //   getBlockletDiff,
 * //   getBlocklets,
 * //   getLatestBlockletVersion,
 * //   getBlockletRuntimeHistory,
 * //   getNodeInfo,
 * //   resetNodeStatus,
 * //   getNodeEnv,
 * //   checkNodeVersion,
 * //   getDelegationState,
 * //   getNodeRuntimeHistory,
 * //   getBlockletMeta,
 * //   getNotifications,
 * //   getRoutingSites,
 * //   getRoutingSnapshots,
 * //   getSnapshotSites,
 * //   getRoutingProviders,
 * //   getCertificates,
 * //   checkDomains,
 * //   findCertificateByDomain,
 * //   getAccessKeys,
 * //   getWebHooks,
 * //   getWebhookSenders,
 * //   sendTestMessage,
 * //   getSession,
 * //   getRoles,
 * //   getPermissions,
 * //   getInvitations,
 * //   getUsers,
 * //   getUser,
 * //   getUsersCountPerRole,
 * //   getOwner,
 * //   getPermissionsByRole,
 * //   getPassportIssuances,
 * //   getAuditLogs,
 * // ]
 */

/**
 * List all mutation method names
 *
 * @name ABTNodeClient#getMutations
 * @function
 * @memberof ABTNodeClient
 * @returns {Array<string>} method name list
 * @example
 * const methods = client.getMutations();
 * // list of mutation methods
 * // [
 * //   installBlocklet,
 * //   installBlockletFromVc,
 * //   installComponent,
 * //   startBlocklet,
 * //   stopBlocklet,
 * //   reloadBlocklet,
 * //   restartBlocklet,
 * //   deleteBlocklet,
 * //   deleteComponent,
 * //   cancelDownloadBlocklet,
 * //   upgradeBlocklet,
 * //   checkComponentsForUpdates,
 * //   upgradeComponents,
 * //   configBlocklet,
 * //   configPublicToStore,
 * //   configNavigations,
 * //   updateWhoCanAccess,
 * //   updateComponentTitle,
 * //   updateComponentMountPoint,
 * //   backupToSpaces,
 * //   restoreFromSpaces,
 * //   updateNodeInfo,
 * //   updateNodeRouting,
 * //   upgradeNodeVersion,
 * //   restartServer,
 * //   resetNode,
 * //   updateGateway,
 * //   createMemberInvitation,
 * //   createTransferInvitation,
 * //   deleteInvitation,
 * //   createPassportIssuance,
 * //   deletePassportIssuance,
 * //   configTrustedPassports,
 * //   configPassportIssuance,
 * //   removeUser,
 * //   updateUserApproval,
 * //   updateUserRole,
 * //   issuePassportToUser,
 * //   revokeUserPassport,
 * //   enableUserPassport,
 * //   createRole,
 * //   updateRole,
 * //   deleteRole,
 * //   createPermission,
 * //   updatePermission,
 * //   deletePermission,
 * //   grantPermissionForRole,
 * //   revokePermissionFromRole,
 * //   updatePermissionsForRole,
 * //   hasPermission,
 * //   addBlockletStore,
 * //   deleteBlockletStore,
 * //   readNotifications,
 * //   unreadNotifications,
 * //   addRoutingSite,
 * //   addDomainAlias,
 * //   deleteDomainAlias,
 * //   deleteRoutingSite,
 * //   updateRoutingSite,
 * //   addRoutingRule,
 * //   updateRoutingRule,
 * //   deleteRoutingRule,
 * //   takeRoutingSnapshot,
 * //   updateCertificate,
 * //   addCertificate,
 * //   deleteCertificate,
 * //   issueLetsEncryptCert,
 * //   createAccessKey,
 * //   updateAccessKey,
 * //   deleteAccessKey,
 * //   createWebHook,
 * //   deleteWebHook,
 * //   startSession,
 * //   updateSession,
 * //   endSession,
 * // ]
 */

/**
 * List all subscription method names
 *
 * @name ABTNodeClient#getSubscription
 * @function
 * @memberof ABTNodeClient
 * @returns {Array<string>} method name list
 * @example
 * const methods = client.getSubscriptions();
 * // list of subscription methods
 * // [

 * // ]
 */

/**
 * Send raw graphql query to token swap service
 *
 * @name ABTNodeClient#doRawQuery
 * @function
 * @memberof ABTNodeClient
 * @param {string} query - graphql query string
 * @returns {Promise} usually axios response data
 * @example
 * const res = await client.doRawQuery('
 *   getChainInfo {
 *     code
 *     info {
 *       address
 *       blockHeight
 *     }
 *   }
 * ');
 *
 * // Then
 * // res.getChainInfo.code
 * // res.getChainInfo.info
 */

/**
 * Send raw graphql subscription to forge graphql endpoint
 *
 * @name ABTNodeClient#doRawSubscription
 * @function
 * @memberof ABTNodeClient
 * @param {string} query - graphql query string
 * @returns {Promise} usually axios response data
 */

/**
 * Structure of ABTNodeClient.TxEncodeOutput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TxEncodeOutput
 * @property {object} object - the transaction object, human readable
 * @property {buffer} buffer - the transaction binary presentation, can be used to signing, encoding to other formats
 */

/**
 * Structure of ABTNodeClient.BlockletControllerInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletControllerInput
 * @property {string} id
 * @property {string} nftId
 * @property {string} nftOwner
 * @property {string} chainHost
 * @property {undefined} expireDate
 */

/**
 * Structure of ABTNodeClient.BlockletQueryInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletQueryInput
 * @property {...ABTNodeClient.BlockletControllerInput} controller
 */

/**
 * Structure of ABTNodeClient.BlockletStoreInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletStoreInput
 * @property {string} name
 * @property {string} description
 * @property {string} url
 * @property {string} logoUrl
 * @property {string} maintainer
 * @property {string} cdnUrl
 * @property {boolean} protected
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.ConfigEntryInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigEntryInput
 * @property {string} key
 * @property {string} value
 * @property {boolean} required
 * @property {string} description
 * @property {string} validation
 * @property {boolean} secure
 * @property {boolean} custom
 * @property {boolean} shared
 */

/**
 * Structure of ABTNodeClient.ConfigNavigationInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigNavigationInput
 * @property {string} id
 * @property {string} title
 * @property {string} link
 * @property {string} icon
 * @property {string} section
 * @property {string} component
 * @property {string} parent
 * @property {string} role
 * @property {boolean} visible
 * @property {string} from
 */

/**
 * Structure of ABTNodeClient.DownloadTokenInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DownloadTokenInput
 * @property {string} did
 * @property {string} token
 */

/**
 * Structure of ABTNodeClient.HashFileInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.HashFileInput
 * @property {string} file
 * @property {string} hash
 */

/**
 * Structure of ABTNodeClient.IssuerInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.IssuerInput
 * @property {string} id
 * @property {string} name
 * @property {string} pk
 */

/**
 * Structure of ABTNodeClient.NodeInfoInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.NodeInfoInput
 * @property {string} name
 * @property {string} description
 * @property {boolean} autoUpgrade
 * @property {boolean} enableWelcomePage
 * @property {string} registerUrl
 * @property {string} webWalletUrl
 * @property {Array<...ABTNodeClient.null>} blockletRegistryList
 * @property {undefined} diskAlertThreshold
 */

/**
 * Structure of ABTNodeClient.PagingInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.PagingInput
 * @property {undefined} total
 * @property {undefined} pageSize
 * @property {undefined} pageCount
 * @property {undefined} page
 */

/**
 * Structure of ABTNodeClient.PassportInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.PassportInput
 * @property {string} id
 * @property {string} name
 * @property {string} title
 * @property {...ABTNodeClient.IssuerInput} issuer
 * @property {Array<...ABTNodeClient.null>} type
 * @property {string} issuanceDate
 * @property {string} expirationDate
 * @property {string} status
 * @property {string} role
 */

/**
 * Structure of ABTNodeClient.PermissionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.PermissionInput
 * @property {string} name
 * @property {string} description
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.RequestAddDomainAliasInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestAddDomainAliasInput
 * @property {string} id
 * @property {string} domainAlias
 * @property {boolean} force
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestAddLetsEncryptCertInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestAddLetsEncryptCertInput
 * @property {string} domain
 * @property {string} did
 */

/**
 * Structure of ABTNodeClient.RequestAddNginxHttpsCertInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestAddNginxHttpsCertInput
 * @property {string} name
 * @property {string} privateKey
 * @property {string} certificate
 */

/**
 * Structure of ABTNodeClient.RequestAddRoutingRuleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestAddRoutingRuleInput
 * @property {string} id
 * @property {...ABTNodeClient.RoutingRuleInput} rule
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestAddRoutingSiteInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestAddRoutingSiteInput
 * @property {string} domain
 * @property {string} type
 * @property {Array<...ABTNodeClient.null>} rules
 */

/**
 * Structure of ABTNodeClient.RequestBackupToSpacesInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBackupToSpacesInput
 * @property {string} did
 */

/**
 * Structure of ABTNodeClient.RequestBlockletBundleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBlockletBundleInput
 * @property {string} did
 * @property {string} name
 * @property {string} serverlessNftId
 */

/**
 * Structure of ABTNodeClient.RequestBlockletDiffInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBlockletDiffInput
 * @property {string} did
 * @property {Array<...ABTNodeClient.null>} hashFiles
 * @property {string} rootDid
 */

/**
 * Structure of ABTNodeClient.RequestBlockletInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBlockletInput
 * @property {string} did
 * @property {string} storeUrl
 * @property {boolean} attachRuntimeInfo
 */

/**
 * Structure of ABTNodeClient.RequestBlockletMetaFromUrlInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBlockletMetaFromUrlInput
 * @property {string} url
 * @property {boolean} checkPrice
 */

/**
 * Structure of ABTNodeClient.RequestBlockletRuntimeHistoryInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestBlockletRuntimeHistoryInput
 * @property {string} did
 * @property {undefined} hours
 */

/**
 * Structure of ABTNodeClient.RequestChangeBlockletStoreInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestChangeBlockletStoreInput
 * @property {string} teamDid
 * @property {string} url
 */

/**
 * Structure of ABTNodeClient.RequestCheckDomainsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCheckDomainsInput
 * @property {Array<...ABTNodeClient.null>} domains
 * @property {string} did
 */

/**
 * Structure of ABTNodeClient.RequestConfigBlockletInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestConfigBlockletInput
 * @property {Array<...ABTNodeClient.null>} did
 * @property {Array<...ABTNodeClient.null>} configs
 */

/**
 * Structure of ABTNodeClient.RequestConfigNavigationsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestConfigNavigationsInput
 * @property {string} did
 * @property {Array<...ABTNodeClient.null>} navigations
 */

/**
 * Structure of ABTNodeClient.RequestConfigPassportIssuanceInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestConfigPassportIssuanceInput
 * @property {string} teamDid
 * @property {boolean} enable
 */

/**
 * Structure of ABTNodeClient.RequestConfigPublicToStoreInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestConfigPublicToStoreInput
 * @property {string} did
 * @property {boolean} publicToStore
 */

/**
 * Structure of ABTNodeClient.RequestConfigTrustedPassportsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestConfigTrustedPassportsInput
 * @property {string} teamDid
 * @property {Array<...ABTNodeClient.null>} trustedPassports
 */

/**
 * Structure of ABTNodeClient.RequestCreateAccessKeyInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreateAccessKeyInput
 * @property {string} remark
 * @property {string} passport
 */

/**
 * Structure of ABTNodeClient.RequestCreateInvitationInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreateInvitationInput
 * @property {string} teamDid
 * @property {string} role
 * @property {string} remark
 */

/**
 * Structure of ABTNodeClient.RequestCreatePassportIssuanceInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreatePassportIssuanceInput
 * @property {string} teamDid
 * @property {string} ownerDid
 * @property {string} name
 */

/**
 * Structure of ABTNodeClient.RequestCreatePermissionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreatePermissionInput
 * @property {string} teamDid
 * @property {string} name
 * @property {string} description
 */

/**
 * Structure of ABTNodeClient.RequestCreateRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreateRoleInput
 * @property {string} teamDid
 * @property {string} name
 * @property {string} title
 * @property {string} description
 * @property {string} childName
 * @property {Array<...ABTNodeClient.null>} permissions
 */

/**
 * Structure of ABTNodeClient.RequestCreateTransferNodeInvitationInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreateTransferNodeInvitationInput
 * @property {string} teamDid
 * @property {string} remark
 */

/**
 * Structure of ABTNodeClient.RequestCreateWebHookInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestCreateWebHookInput
 * @property {...ABTNodeClient.SenderType} type
 * @property {string} title
 * @property {string} description
 * @property {Array<...ABTNodeClient.null>} params
 */

/**
 * Structure of ABTNodeClient.RequestDeleteAccessKeyInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteAccessKeyInput
 * @property {string} accessKeyId
 */

/**
 * Structure of ABTNodeClient.RequestDeleteBlockletInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteBlockletInput
 * @property {string} did
 * @property {boolean} keepData
 */

/**
 * Structure of ABTNodeClient.RequestDeleteComponentInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteComponentInput
 * @property {string} did
 * @property {string} rootDid
 * @property {boolean} keepData
 */

/**
 * Structure of ABTNodeClient.RequestDeleteDomainAliasInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteDomainAliasInput
 * @property {string} id
 * @property {string} domainAlias
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestDeleteNginxHttpsCertInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteNginxHttpsCertInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestDeletePermissionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeletePermissionInput
 * @property {string} teamDid
 * @property {string} name
 */

/**
 * Structure of ABTNodeClient.RequestDeleteRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteRoleInput
 * @property {string} teamDid
 * @property {string} name
 */

/**
 * Structure of ABTNodeClient.RequestDeleteRoutingRuleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteRoutingRuleInput
 * @property {string} id
 * @property {string} ruleId
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestDeleteRoutingSiteInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteRoutingSiteInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestDeleteTeamSessionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteTeamSessionInput
 * @property {string} teamDid
 * @property {string} sessionId
 */

/**
 * Structure of ABTNodeClient.RequestDeleteWebHookInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestDeleteWebHookInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestEndSessionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestEndSessionInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestFindCertificateByDomainInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestFindCertificateByDomainInput
 * @property {string} domain
 * @property {string} did
 */

/**
 * Structure of ABTNodeClient.RequestGatewayInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGatewayInput
 * @property {...ABTNodeClient.RequestLimitInput} requestLimit
 */

/**
 * Structure of ABTNodeClient.RequestGetAuditLogsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetAuditLogsInput
 * @property {...ABTNodeClient.PagingInput} paging
 * @property {string} scope
 * @property {string} category
 */

/**
 * Structure of ABTNodeClient.RequestGetBlockletsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetBlockletsInput
 * @property {boolean} useCache
 * @property {...ABTNodeClient.BlockletQueryInput} query
 */

/**
 * Structure of ABTNodeClient.RequestGetNotificationsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetNotificationsInput
 * @property {string} receiver
 * @property {string} sender
 * @property {boolean} read
 * @property {...ABTNodeClient.PagingInput} paging
 */

/**
 * Structure of ABTNodeClient.RequestGetPassportIssuancesInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetPassportIssuancesInput
 * @property {string} teamDid
 * @property {string} ownerDid
 */

/**
 * Structure of ABTNodeClient.RequestGetRoutingSitesInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetRoutingSitesInput
 * @property {string} snapshotHash
 */

/**
 * Structure of ABTNodeClient.RequestGetRoutingSnapshotsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetRoutingSnapshotsInput
 * @property {undefined} limit
 */

/**
 * Structure of ABTNodeClient.RequestGetSessionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetSessionInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestGetSnapshotSitesInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGetSnapshotSitesInput
 * @property {string} hash
 */

/**
 * Structure of ABTNodeClient.RequestGrantPermissionForRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestGrantPermissionForRoleInput
 * @property {string} teamDid
 * @property {string} roleName
 * @property {string} grantName
 */

/**
 * Structure of ABTNodeClient.RequestHasPermissionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestHasPermissionInput
 * @property {string} teamDid
 * @property {string} role
 * @property {string} permission
 */

/**
 * Structure of ABTNodeClient.RequestInstallComponentInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestInstallComponentInput
 * @property {string} rootDid
 * @property {string} mountPoint
 * @property {string} url
 * @property {undefined} file
 * @property {string} did
 * @property {string} diffVersion
 * @property {Array<...ABTNodeClient.null>} deleteSet
 * @property {string} name
 * @property {string} title
 * @property {Array<...ABTNodeClient.null>} configs
 * @property {Array<...ABTNodeClient.null>} downloadTokenList
 * @property {boolean} skipNavigation
 */

/**
 * Structure of ABTNodeClient.RequestInstallFromVcInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestInstallFromVcInput
 * @property {string} challenge
 * @property {undefined} vcPresentation
 */

/**
 * Structure of ABTNodeClient.RequestIssuePassportToUserInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestIssuePassportToUserInput
 * @property {string} teamDid
 * @property {string} userDid
 * @property {string} role
 */

/**
 * Structure of ABTNodeClient.RequestLatestBlockletVersionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestLatestBlockletVersionInput
 * @property {string} did
 * @property {string} version
 */

/**
 * Structure of ABTNodeClient.RequestLimitInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestLimitInput
 * @property {boolean} enabled
 * @property {undefined} rate
 * @property {string} ipHeader
 */

/**
 * Structure of ABTNodeClient.RequestNodeRoutingInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestNodeRoutingInput
 * @property {string} provider
 * @property {string} snapshotHash
 * @property {boolean} forceRepopulate
 */

/**
 * Structure of ABTNodeClient.RequestNodeRuntimeHistoryInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestNodeRuntimeHistoryInput
 * @property {undefined} hours
 */

/**
 * Structure of ABTNodeClient.RequestReadNotificationsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestReadNotificationsInput
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.RequestResetNodeInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestResetNodeInput
 * @property {boolean} owner
 * @property {boolean} blocklets
 * @property {boolean} webhooks
 * @property {boolean} certificates
 * @property {boolean} accessKeys
 * @property {boolean} blockletExtras
 * @property {boolean} routingRules
 * @property {boolean} users
 * @property {boolean} invitations
 */

/**
 * Structure of ABTNodeClient.RequestRestoreFromSpacesInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestRestoreFromSpacesInput
 * @property {string} endpoint
 * @property {string} blockletSecretKey
 */

/**
 * Structure of ABTNodeClient.RequestRevokePermissionFromRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestRevokePermissionFromRoleInput
 * @property {string} teamDid
 * @property {string} roleName
 * @property {string} grantName
 */

/**
 * Structure of ABTNodeClient.RequestRevokeUserPassportInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestRevokeUserPassportInput
 * @property {string} teamDid
 * @property {string} userDid
 * @property {string} passportId
 */

/**
 * Structure of ABTNodeClient.RequestSendMsgInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestSendMsgInput
 * @property {string} webhookId
 * @property {string} message
 */

/**
 * Structure of ABTNodeClient.RequestStartSessionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestStartSessionInput
 * @property {string} data
 */

/**
 * Structure of ABTNodeClient.RequestTakeRoutingSnapshotInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestTakeRoutingSnapshotInput
 * @property {boolean} dryRun
 * @property {string} message
 */

/**
 * Structure of ABTNodeClient.RequestTeamPermissionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestTeamPermissionInput
 * @property {string} teamDid
 * @property {...ABTNodeClient.PermissionInput} permission
 */

/**
 * Structure of ABTNodeClient.RequestTeamRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestTeamRoleInput
 * @property {string} teamDid
 * @property {...ABTNodeClient.RoleInput} role
 */

/**
 * Structure of ABTNodeClient.RequestTeamUserInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestTeamUserInput
 * @property {string} teamDid
 * @property {...ABTNodeClient.UserInfoInput} user
 */

/**
 * Structure of ABTNodeClient.RequestUpdateAccessKeyInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateAccessKeyInput
 * @property {string} accessKeyId
 * @property {string} remark
 * @property {string} passport
 */

/**
 * Structure of ABTNodeClient.RequestUpdateComponentMountPointInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateComponentMountPointInput
 * @property {string} did
 * @property {string} rootDid
 * @property {string} mountPoint
 */

/**
 * Structure of ABTNodeClient.RequestUpdateComponentTitleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateComponentTitleInput
 * @property {string} did
 * @property {string} rootDid
 * @property {string} title
 */

/**
 * Structure of ABTNodeClient.RequestUpdateComponentsInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateComponentsInput
 * @property {string} updateId
 * @property {string} rootDid
 * @property {Array<...ABTNodeClient.null>} selectedComponents
 */

/**
 * Structure of ABTNodeClient.RequestUpdateNginxHttpsCertInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateNginxHttpsCertInput
 * @property {string} id
 * @property {string} name
 */

/**
 * Structure of ABTNodeClient.RequestUpdatePermissionsForRoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdatePermissionsForRoleInput
 * @property {string} teamDid
 * @property {string} roleName
 * @property {Array<...ABTNodeClient.null>} grantNames
 */

/**
 * Structure of ABTNodeClient.RequestUpdateRoutingRuleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateRoutingRuleInput
 * @property {string} id
 * @property {...ABTNodeClient.RoutingRuleInput} rule
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestUpdateRoutingSiteInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateRoutingSiteInput
 * @property {string} id
 * @property {Array<...ABTNodeClient.null>} corsAllowedOrigins
 * @property {string} domain
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.RequestUpdateSessionInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateSessionInput
 * @property {string} id
 * @property {string} data
 */

/**
 * Structure of ABTNodeClient.RequestUpdateWhoCanAccessInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpdateWhoCanAccessInput
 * @property {Array<...ABTNodeClient.null>} did
 * @property {string} whoCanAccess
 */

/**
 * Structure of ABTNodeClient.RequestUpgradeBlockletInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUpgradeBlockletInput
 * @property {string} did
 * @property {string} storeUrl
 */

/**
 * Structure of ABTNodeClient.RequestUsersInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestUsersInput
 * @property {string} teamDid
 * @property {...ABTNodeClient.UserQueryInput} query
 * @property {...ABTNodeClient.UserSortInput} sort
 * @property {...ABTNodeClient.PagingInput} paging
 * @property {Array<...ABTNodeClient.null>} dids
 */

/**
 * Structure of ABTNodeClient.RequestVersionedBlockletInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestVersionedBlockletInput
 * @property {string} type
 * @property {string} did
 * @property {string} storeUrl
 * @property {string} url
 * @property {undefined} file
 * @property {string} diffVersion
 * @property {Array<...ABTNodeClient.null>} deleteSet
 * @property {string} title
 * @property {string} description
 * @property {boolean} startImmediately
 * @property {Array<...ABTNodeClient.null>} downloadTokenList
 */

/**
 * Structure of ABTNodeClient.RequsetDeleteInvitationInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequsetDeleteInvitationInput
 * @property {string} teamDid
 * @property {string} inviteId
 */

/**
 * Structure of ABTNodeClient.RoleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoleInput
 * @property {string} name
 * @property {string} description
 * @property {Array<...ABTNodeClient.null>} grants
 * @property {string} title
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.RoutingRuleFromInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleFromInput
 * @property {string} pathPrefix
 * @property {Array<...ABTNodeClient.null>} header
 */

/**
 * Structure of ABTNodeClient.RoutingRuleHeaderInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleHeaderInput
 * @property {string} key
 * @property {string} value
 * @property {...ABTNodeClient.HeaderMatchType} type
 */

/**
 * Structure of ABTNodeClient.RoutingRuleInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleInput
 * @property {string} id
 * @property {...ABTNodeClient.RoutingRuleFromInput} from
 * @property {...ABTNodeClient.RoutingRuleToInput} to
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.RoutingRuleToInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleToInput
 * @property {undefined} port
 * @property {...ABTNodeClient.BackendServiceType} type
 * @property {string} did
 * @property {string} url
 * @property {undefined} redirectCode
 * @property {string} interfaceName
 * @property {string} componentId
 */

/**
 * Structure of ABTNodeClient.TeamInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TeamInput
 * @property {string} teamDid
 */

/**
 * Structure of ABTNodeClient.TrustedPassportInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportInput
 * @property {string} issuerDid
 * @property {string} remark
 * @property {Array<...ABTNodeClient.null>} mappings
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMappingFromInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMappingFromInput
 * @property {string} passport
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMappingInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMappingInput
 * @property {...ABTNodeClient.TrustedPassportMappingFromInput} from
 * @property {...ABTNodeClient.TrustedPassportMappingToInput} to
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMappingToInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMappingToInput
 * @property {string} role
 */

/**
 * Structure of ABTNodeClient.UserInfoInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UserInfoInput
 * @property {string} did
 * @property {string} pk
 * @property {string} role
 * @property {string} avatar
 * @property {string} fullName
 * @property {string} email
 * @property {boolean} approved
 * @property {string} createdAt
 * @property {string} updatedAt
 * @property {string} locale
 * @property {Array<...ABTNodeClient.null>} passports
 * @property {string} firstLoginAt
 * @property {string} lastLoginAt
 * @property {string} remark
 */

/**
 * Structure of ABTNodeClient.UserQueryInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UserQueryInput
 * @property {string} role
 * @property {boolean} approved
 * @property {string} search
 */

/**
 * Structure of ABTNodeClient.UserSortInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UserSortInput
 * @property {undefined} updatedAt
 * @property {undefined} createdAt
 * @property {undefined} lastLoginAt
 */

/**
 * Structure of ABTNodeClient.WebHookParamInput
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.WebHookParamInput
 * @property {string} name
 * @property {string} description
 * @property {boolean} required
 * @property {string} defaultValue
 * @property {string} value
 * @property {string} type
 */

/**
 * Structure of ABTNodeClient.AccessKey
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AccessKey
 * @property {string} accessKeyId
 * @property {string} remark
 * @property {string} passport
 * @property {string} createdAt
 * @property {string} lastUsedAt
 * @property {string} createdBy
 * @property {string} updatedBy
 */

/**
 * Structure of ABTNodeClient.AuditLog
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AuditLog
 * @property {string} id
 * @property {string} scope
 * @property {string} category
 * @property {string} action
 * @property {string} content
 * @property {...ABTNodeClient.AuditLogActor} actor
 * @property {...ABTNodeClient.AuditLogEnv} env
 * @property {string} createdAt
 * @property {string} ip
 */

/**
 * Structure of ABTNodeClient.AuditLogActor
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AuditLogActor
 * @property {string} did
 * @property {string} role
 * @property {string} fullName
 */

/**
 * Structure of ABTNodeClient.AuditLogEnv
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AuditLogEnv
 * @property {...ABTNodeClient.AuditLogEnvItem} browser
 * @property {...ABTNodeClient.AuditLogEnvItem} os
 */

/**
 * Structure of ABTNodeClient.AuditLogEnvItem
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AuditLogEnvItem
 * @property {string} name
 * @property {string} version
 */

/**
 * Structure of ABTNodeClient.BlockletCapabilities
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletCapabilities
 * @property {boolean} clusterMode
 * @property {boolean} component
 * @property {boolean} navigation
 */

/**
 * Structure of ABTNodeClient.BlockletController
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletController
 * @property {string} id
 * @property {string} nftId
 * @property {string} nftOwner
 * @property {string} chainHost
 * @property {undefined} expireDate
 */

/**
 * Structure of ABTNodeClient.BlockletDiff
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletDiff
 * @property {boolean} hasBlocklet
 * @property {string} version
 * @property {Array<...ABTNodeClient.null>} addSet
 * @property {Array<...ABTNodeClient.null>} changeSet
 * @property {Array<...ABTNodeClient.null>} deleteSet
 */

/**
 * Structure of ABTNodeClient.BlockletDist
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletDist
 * @property {string} tarball
 * @property {string} integrity
 */

/**
 * Structure of ABTNodeClient.BlockletEngine
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletEngine
 * @property {string} name
 * @property {string} displayName
 * @property {string} description
 * @property {string} version
 * @property {boolean} available
 * @property {boolean} visible
 */

/**
 * Structure of ABTNodeClient.BlockletHistoryItem
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletHistoryItem
 * @property {undefined} date
 * @property {undefined} cpu
 * @property {undefined} mem
 */

/**
 * Structure of ABTNodeClient.BlockletMeta
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletMeta
 * @property {string} did
 * @property {string} name
 * @property {string} version
 * @property {string} description
 * @property {Array<...ABTNodeClient.null>} interfaces
 * @property {...ABTNodeClient.BlockletMetaPerson} author
 * @property {string} main
 * @property {...ABTNodeClient.BlockletStats} stats
 * @property {string} homepage
 * @property {undefined} price
 * @property {string} path
 * @property {string} community
 * @property {string} documentation
 * @property {string} support
 * @property {Array<...ABTNodeClient.null>} screenshots
 * @property {Array<...ABTNodeClient.null>} keywords
 * @property {string} group
 * @property {string} logo
 * @property {string} title
 * @property {...ABTNodeClient.BlockletDist} dist
 * @property {Array<...ABTNodeClient.null>} maintainers
 * @property {Array<...ABTNodeClient.null>} contributors
 * @property {...ABTNodeClient.BlockletRepository} repository
 * @property {...ABTNodeClient.BlockletPayment} payment
 * @property {string} nftFactory
 * @property {string} lastPublishedAt
 * @property {...ABTNodeClient.BlockletCapabilities} capabilities
 * @property {Array<...ABTNodeClient.null>} components
 * @property {Array<...ABTNodeClient.null>} environments
 * @property {...ABTNodeClient.Requirement} requirements
 * @property {string} bundleDid
 * @property {string} bundleName
 * @property {Array<...ABTNodeClient.null>} navigation
 */

/**
 * Structure of ABTNodeClient.BlockletMetaInterface
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletMetaInterface
 * @property {string} type
 * @property {string} name
 * @property {string} path
 * @property {string} prefix
 * @property {string} protocol
 * @property {undefined} port
 * @property {Array<...ABTNodeClient.null>} services
 */

/**
 * Structure of ABTNodeClient.BlockletMetaPerson
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletMetaPerson
 * @property {string} name
 * @property {string} email
 * @property {string} url
 */

/**
 * Structure of ABTNodeClient.BlockletMetaService
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletMetaService
 * @property {string} name
 * @property {undefined} config
 */

/**
 * Structure of ABTNodeClient.BlockletPayment
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletPayment
 * @property {Array<...ABTNodeClient.null>} price
 * @property {Array<...ABTNodeClient.null>} share
 */

/**
 * Structure of ABTNodeClient.BlockletPaymentPrice
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletPaymentPrice
 * @property {string} address
 * @property {string} value
 * @property {string} symbol
 */

/**
 * Structure of ABTNodeClient.BlockletPaymentShare
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletPaymentShare
 * @property {string} address
 * @property {string} name
 * @property {string} value
 */

/**
 * Structure of ABTNodeClient.BlockletPreUpdateInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletPreUpdateInfo
 * @property {string} updateId
 * @property {Array<...ABTNodeClient.null>} updateList
 */

/**
 * Structure of ABTNodeClient.BlockletRepository
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletRepository
 * @property {string} type
 * @property {string} url
 */

/**
 * Structure of ABTNodeClient.BlockletSettings
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletSettings
 * @property {boolean} initialized
 * @property {boolean} enablePassportIssuance
 * @property {Array<...ABTNodeClient.null>} trustedPassports
 * @property {string} whoCanAccess
 * @property {...ABTNodeClient.WalletInfo} owner
 * @property {Array<...ABTNodeClient.null>} children
 * @property {boolean} publicToStore
 * @property {Array<...ABTNodeClient.null>} storeList
 * @property {Array<...ABTNodeClient.null>} navigations
 */

/**
 * Structure of ABTNodeClient.BlockletState
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletState
 * @property {...ABTNodeClient.BlockletMeta} meta
 * @property {...ABTNodeClient.BlockletStatus} status
 * @property {string} createdAt
 * @property {string} installedAt
 * @property {string} startedAt
 * @property {string} pausedAt
 * @property {string} stoppedAt
 * @property {Array<...ABTNodeClient.null>} environments
 * @property {Array<...ABTNodeClient.null>} configs
 * @property {...ABTNodeClient.DiskInfo} diskInfo
 * @property {...ABTNodeClient.RuntimeInfo} runtimeInfo
 * @property {...ABTNodeClient.RuntimeInfo} appRuntimeInfo
 * @property {...ABTNodeClient.BlockletSource} source
 * @property {string} deployedFrom
 * @property {undefined} bundleSource
 * @property {undefined} port
 * @property {...ABTNodeClient.BlockletEngine} engine
 * @property {string} mode
 * @property {undefined} ports
 * @property {Array<...ABTNodeClient.null>} children
 * @property {Array<...ABTNodeClient.null>} trustedPassports
 * @property {boolean} enablePassportIssuance
 * @property {boolean} dynamic
 * @property {string} mountPoint
 * @property {...ABTNodeClient.BlockletSettings} settings
 * @property {string} appDid
 * @property {...ABTNodeClient.RoutingSite} site
 * @property {...ABTNodeClient.BlockletController} controller
 */

/**
 * Structure of ABTNodeClient.BlockletStats
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletStats
 * @property {undefined} downloads
 * @property {undefined} star
 * @property {undefined} purchases
 */

/**
 * Structure of ABTNodeClient.BlockletStore
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BlockletStore
 * @property {string} name
 * @property {string} description
 * @property {string} url
 * @property {string} logoUrl
 * @property {string} maintainer
 * @property {string} cdnUrl
 * @property {boolean} protected
 * @property {string} id
 */

/**
 * Structure of ABTNodeClient.BooleanResponse
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BooleanResponse
 * @property {...ABTNodeClient.StatusCode} code
 * @property {boolean} result
 */

/**
 * Structure of ABTNodeClient.Certificate
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Certificate
 * @property {string} name
 * @property {string} domain
 * @property {string} id
 * @property {...ABTNodeClient.CertificateMeta} meta
 * @property {Array<...ABTNodeClient.null>} matchedSites
 * @property {string} createdAt
 * @property {string} updatedAt
 * @property {boolean} isProtected
 * @property {string} source
 * @property {string} status
 */

/**
 * Structure of ABTNodeClient.CertificateIssuer
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CertificateIssuer
 * @property {string} countryName
 * @property {string} organizationName
 * @property {string} commonName
 */

/**
 * Structure of ABTNodeClient.CertificateMeta
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CertificateMeta
 * @property {...ABTNodeClient.CertificateIssuer} issuer
 * @property {Array<...ABTNodeClient.null>} sans
 * @property {undefined} validFrom
 * @property {undefined} validTo
 * @property {string} fingerprintAlg
 * @property {string} fingerprint
 * @property {undefined} validityPeriod
 */

/**
 * Structure of ABTNodeClient.ChildConfig
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ChildConfig
 * @property {string} name
 * @property {string} mountPoint
 */

/**
 * Structure of ABTNodeClient.ComponentState
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ComponentState
 * @property {...ABTNodeClient.BlockletMeta} meta
 * @property {...ABTNodeClient.BlockletStatus} status
 * @property {string} createdAt
 * @property {string} installedAt
 * @property {string} startedAt
 * @property {string} pausedAt
 * @property {string} stoppedAt
 * @property {Array<...ABTNodeClient.null>} environments
 * @property {Array<...ABTNodeClient.null>} configs
 * @property {...ABTNodeClient.DiskInfo} diskInfo
 * @property {...ABTNodeClient.RuntimeInfo} runtimeInfo
 * @property {...ABTNodeClient.BlockletSource} source
 * @property {string} deployedFrom
 * @property {undefined} bundleSource
 * @property {undefined} port
 * @property {...ABTNodeClient.BlockletEngine} engine
 * @property {string} mode
 * @property {undefined} ports
 * @property {Array<...ABTNodeClient.null>} children
 * @property {boolean} dynamic
 * @property {string} mountPoint
 */

/**
 * Structure of ABTNodeClient.ConfigEntry
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigEntry
 * @property {string} key
 * @property {string} value
 * @property {boolean} required
 * @property {string} description
 * @property {string} validation
 * @property {boolean} secure
 * @property {boolean} custom
 * @property {boolean} shared
 */

/**
 * Structure of ABTNodeClient.ConfigNavigation
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigNavigation
 * @property {string} id
 * @property {string} title
 * @property {string} link
 * @property {string} icon
 * @property {string} section
 * @property {string} component
 * @property {string} parent
 * @property {string} role
 * @property {boolean} visible
 * @property {string} from
 */

/**
 * Structure of ABTNodeClient.CreateAccessKey
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateAccessKey
 * @property {string} accessKeyId
 * @property {string} accessKeySecret
 * @property {string} remark
 * @property {string} passport
 * @property {string} createdAt
 * @property {string} lastUsedAt
 */

/**
 * Structure of ABTNodeClient.DelegationState
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DelegationState
 * @property {boolean} delegated
 */

/**
 * Structure of ABTNodeClient.DeletedBlockletMeta
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeletedBlockletMeta
 * @property {string} did
 * @property {string} name
 * @property {string} version
 * @property {string} description
 * @property {string} title
 * @property {string} bundleDid
 * @property {string} bundleName
 */

/**
 * Structure of ABTNodeClient.DeletedBlockletState
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeletedBlockletState
 * @property {...ABTNodeClient.DeletedBlockletMeta} meta
 * @property {...ABTNodeClient.BlockletStatus} status
 * @property {string} deployedFrom
 * @property {string} mountPoint
 * @property {string} deletedAt
 */

/**
 * Structure of ABTNodeClient.DiskInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DiskInfo
 * @property {undefined} app
 * @property {undefined} data
 * @property {undefined} log
 * @property {undefined} cache
 * @property {undefined} blocklets
 */

/**
 * Structure of ABTNodeClient.Environment
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Environment
 * @property {string} name
 * @property {string} description
 * @property {string} default
 * @property {boolean} required
 * @property {boolean} secure
 * @property {string} validation
 * @property {boolean} shared
 */

/**
 * Structure of ABTNodeClient.Fuel
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Fuel
 * @property {string} endpoint
 * @property {string} address
 * @property {string} value
 * @property {string} reason
 */

/**
 * Structure of ABTNodeClient.Gateway
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Gateway
 * @property {...ABTNodeClient.RequestLimit} requestLimit
 */

/**
 * Structure of ABTNodeClient.GeneralResponse
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GeneralResponse
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.IPInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.IPInfo
 * @property {string} internalV4
 * @property {string} externalV4
 * @property {string} internalV6
 * @property {string} externalV6
 */

/**
 * Structure of ABTNodeClient.InviteInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.InviteInfo
 * @property {string} inviteId
 * @property {string} role
 * @property {string} remark
 * @property {string} expireDate
 * @property {...ABTNodeClient.UserInfo} inviter
 * @property {string} teamDid
 * @property {string} interfaceName
 */

/**
 * Structure of ABTNodeClient.Issuer
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Issuer
 * @property {string} id
 * @property {string} name
 * @property {string} pk
 */

/**
 * Structure of ABTNodeClient.KeyValue
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.KeyValue
 * @property {string} key
 * @property {undefined} value
 */

/**
 * Structure of ABTNodeClient.LatestBlockletVersion
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.LatestBlockletVersion
 * @property {string} did
 * @property {string} version
 * @property {string} registryUrl
 */

/**
 * Structure of ABTNodeClient.LauncherInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.LauncherInfo
 * @property {string} did
 * @property {string} type
 * @property {string} provider
 * @property {string} url
 * @property {string} tag
 * @property {string} chainHost
 */

/**
 * Structure of ABTNodeClient.MatchedSites
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.MatchedSites
 * @property {string} id
 * @property {string} domain
 */

/**
 * Structure of ABTNodeClient.Mutation
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Mutation
 * @property {...ABTNodeClient.ResponseBlocklet} installBlocklet
 * @property {...ABTNodeClient.ResponseInstallFromVc} installBlockletFromVc
 * @property {...ABTNodeClient.ResponseBlocklet} installComponent
 * @property {...ABTNodeClient.ResponseBlocklet} startBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} stopBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} reloadBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} restartBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} deleteBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} deleteComponent
 * @property {...ABTNodeClient.ResponseBlocklet} cancelDownloadBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} upgradeBlocklet
 * @property {...ABTNodeClient.ResponseCheckComponentsForUpdates} checkComponentsForUpdates
 * @property {...ABTNodeClient.ResponseBlocklet} upgradeComponents
 * @property {...ABTNodeClient.ResponseBlocklet} configBlocklet
 * @property {...ABTNodeClient.ResponseBlocklet} configPublicToStore
 * @property {...ABTNodeClient.ResponseBlocklet} configNavigations
 * @property {...ABTNodeClient.ResponseBlocklet} updateWhoCanAccess
 * @property {...ABTNodeClient.ResponseBlocklet} updateComponentTitle
 * @property {...ABTNodeClient.ResponseBlocklet} updateComponentMountPoint
 * @property {...ABTNodeClient.GeneralResponse} backupToSpaces
 * @property {...ABTNodeClient.GeneralResponse} restoreFromSpaces
 * @property {...ABTNodeClient.ResponseGetNodeInfo} updateNodeInfo
 * @property {...ABTNodeClient.ResponseGetNodeInfo} updateNodeRouting
 * @property {...ABTNodeClient.ResponseUpgradeNodeVersion} upgradeNodeVersion
 * @property {...ABTNodeClient.ResponseRestartServer} restartServer
 * @property {...ABTNodeClient.ResponseResetNode} resetNode
 * @property {...ABTNodeClient.ResponseGateway} updateGateway
 * @property {...ABTNodeClient.ResponseCreateInvitation} createMemberInvitation
 * @property {...ABTNodeClient.ResponseCreateTransferNodeInvitation} createTransferInvitation
 * @property {...ABTNodeClient.GeneralResponse} deleteInvitation
 * @property {...ABTNodeClient.ResponseCreatePassportIssuance} createPassportIssuance
 * @property {...ABTNodeClient.GeneralResponse} deletePassportIssuance
 * @property {...ABTNodeClient.GeneralResponse} configTrustedPassports
 * @property {...ABTNodeClient.GeneralResponse} configPassportIssuance
 * @property {...ABTNodeClient.ResponseUser} removeUser
 * @property {...ABTNodeClient.ResponseUser} updateUserApproval
 * @property {...ABTNodeClient.ResponseUser} updateUserRole
 * @property {...ABTNodeClient.ResponseUser} issuePassportToUser
 * @property {...ABTNodeClient.ResponseUser} revokeUserPassport
 * @property {...ABTNodeClient.ResponseUser} enableUserPassport
 * @property {...ABTNodeClient.ResponseRole} createRole
 * @property {...ABTNodeClient.ResponseRole} updateRole
 * @property {...ABTNodeClient.GeneralResponse} deleteRole
 * @property {...ABTNodeClient.ResponsePermission} createPermission
 * @property {...ABTNodeClient.ResponsePermission} updatePermission
 * @property {...ABTNodeClient.GeneralResponse} deletePermission
 * @property {...ABTNodeClient.GeneralResponse} grantPermissionForRole
 * @property {...ABTNodeClient.GeneralResponse} revokePermissionFromRole
 * @property {...ABTNodeClient.ResponseRole} updatePermissionsForRole
 * @property {...ABTNodeClient.BooleanResponse} hasPermission
 * @property {...ABTNodeClient.GeneralResponse} addBlockletStore
 * @property {...ABTNodeClient.GeneralResponse} deleteBlockletStore
 * @property {...ABTNodeClient.ResponseReadNotifications} readNotifications
 * @property {...ABTNodeClient.ResponseReadNotifications} unreadNotifications
 * @property {...ABTNodeClient.ResponseRoutingSite} addRoutingSite
 * @property {...ABTNodeClient.ResponseRoutingSite} addDomainAlias
 * @property {...ABTNodeClient.ResponseRoutingSite} deleteDomainAlias
 * @property {...ABTNodeClient.GeneralResponse} deleteRoutingSite
 * @property {...ABTNodeClient.ResponseRoutingSite} updateRoutingSite
 * @property {...ABTNodeClient.ResponseRoutingSite} addRoutingRule
 * @property {...ABTNodeClient.ResponseRoutingSite} updateRoutingRule
 * @property {...ABTNodeClient.ResponseRoutingSite} deleteRoutingRule
 * @property {...ABTNodeClient.ResponseTakeRoutingSnapshot} takeRoutingSnapshot
 * @property {...ABTNodeClient.ResponseUpdateNginxHttpsCert} updateCertificate
 * @property {...ABTNodeClient.ResponseAddNginxHttpsCert} addCertificate
 * @property {...ABTNodeClient.ResponseDeleteNginxHttpsCert} deleteCertificate
 * @property {...ABTNodeClient.ResponseAddLetsEncryptCert} issueLetsEncryptCert
 * @property {...ABTNodeClient.ResponseCreateAccessKey} createAccessKey
 * @property {...ABTNodeClient.ResponseUpdateAccessKey} updateAccessKey
 * @property {...ABTNodeClient.ResponseDeleteAccessKey} deleteAccessKey
 * @property {...ABTNodeClient.ResponseCreateWebHook} createWebHook
 * @property {...ABTNodeClient.ResponseDeleteWebHook} deleteWebHook
 * @property {...ABTNodeClient.ResponseGetSession} startSession
 * @property {...ABTNodeClient.ResponseGetSession} updateSession
 * @property {...ABTNodeClient.ResponseGetSession} endSession
 */

/**
 * Structure of ABTNodeClient.NodeEnvInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.NodeEnvInfo
 * @property {...ABTNodeClient.IPInfo} ip
 * @property {string} os
 * @property {string} location
 * @property {boolean} docker
 * @property {boolean} image
 * @property {Array<...ABTNodeClient.null>} blockletEngines
 * @property {boolean} gitpod
 * @property {...ABTNodeClient.DiskInfo} disk
 */

/**
 * Structure of ABTNodeClient.NodeHistoryItem
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.NodeHistoryItem
 * @property {undefined} date
 * @property {undefined} cpu
 * @property {undefined} mem
 * @property {undefined} daemonMem
 * @property {undefined} serviceMem
 * @property {undefined} dbMem
 */

/**
 * Structure of ABTNodeClient.NodeRouting
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.NodeRouting
 * @property {string} provider
 * @property {string} snapshotHash
 * @property {string} adminPath
 * @property {...ABTNodeClient.RequestLimit} requestLimit
 */

/**
 * Structure of ABTNodeClient.NodeState
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.NodeState
 * @property {string} did
 * @property {string} pk
 * @property {string} version
 * @property {string} name
 * @property {string} description
 * @property {string} port
 * @property {boolean} initialized
 * @property {...ABTNodeClient.WalletInfo} nodeOwner
 * @property {string} createdAt
 * @property {string} startedAt
 * @property {string} initializedAt
 * @property {string} mode
 * @property {...ABTNodeClient.NodeRouting} routing
 * @property {Array<...ABTNodeClient.null>} environments
 * @property {undefined} uptime
 * @property {boolean} autoUpgrade
 * @property {string} nextVersion
 * @property {string} upgradeSessionId
 * @property {string} registerUrl
 * @property {boolean} enableWelcomePage
 * @property {string} webWalletUrl
 * @property {Array<...ABTNodeClient.null>} blockletRegistryList
 * @property {...ABTNodeClient.OwnerNft} ownerNft
 * @property {undefined} diskAlertThreshold
 * @property {Array<...ABTNodeClient.null>} trustedPassports
 * @property {...ABTNodeClient.LauncherInfo} launcher
 * @property {boolean} enablePassportIssuance
 * @property {string} didRegistry
 * @property {string} didDomain
 * @property {undefined} status
 */

/**
 * Structure of ABTNodeClient.Notification
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Notification
 * @property {string} sender
 * @property {string} receiver
 * @property {string} title
 * @property {string} description
 * @property {string} action
 * @property {string} entityType
 * @property {string} entityId
 * @property {boolean} read
 * @property {string} createdAt
 * @property {string} updatedAt
 * @property {string} id
 * @property {string} severity
 */

/**
 * Structure of ABTNodeClient.OwnerNft
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.OwnerNft
 * @property {string} did
 * @property {string} holder
 * @property {string} issuer
 */

/**
 * Structure of ABTNodeClient.Paging
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Paging
 * @property {undefined} total
 * @property {undefined} pageSize
 * @property {undefined} pageCount
 * @property {undefined} page
 */

/**
 * Structure of ABTNodeClient.Passport
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Passport
 * @property {string} id
 * @property {string} name
 * @property {string} title
 * @property {...ABTNodeClient.Issuer} issuer
 * @property {Array<...ABTNodeClient.null>} type
 * @property {string} issuanceDate
 * @property {string} expirationDate
 * @property {string} status
 * @property {string} role
 */

/**
 * Structure of ABTNodeClient.PassportIssuanceInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.PassportIssuanceInfo
 * @property {string} id
 * @property {string} name
 * @property {string} title
 * @property {string} expireDate
 * @property {string} teamDid
 * @property {string} ownerDid
 */

/**
 * Structure of ABTNodeClient.Permission
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Permission
 * @property {string} name
 * @property {string} description
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.Query
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Query
 * @property {...ABTNodeClient.ResponseBlocklet} getBlocklet
 * @property {...ABTNodeClient.ResponseBlockletMetaFromUrl} getBlockletMetaFromUrl
 * @property {...ABTNodeClient.ResponseBlockletInfo} getBlockletByBundle
 * @property {...ABTNodeClient.ResponseBlockletDiff} getBlockletDiff
 * @property {...ABTNodeClient.ResponseGetBlocklets} getBlocklets
 * @property {...ABTNodeClient.ResponseLatestBlockletVersion} getLatestBlockletVersion
 * @property {...ABTNodeClient.ResponseBlockletRuntimeHistory} getBlockletRuntimeHistory
 * @property {...ABTNodeClient.ResponseGetNodeInfo} getNodeInfo
 * @property {...ABTNodeClient.ResponseGetNodeInfo} resetNodeStatus
 * @property {...ABTNodeClient.ResponseGetNodeEnv} getNodeEnv
 * @property {...ABTNodeClient.ResponseCheckNodeVersion} checkNodeVersion
 * @property {...ABTNodeClient.ResponseDelegationState} getDelegationState
 * @property {...ABTNodeClient.ResponseNodeRuntimeHistory} getNodeRuntimeHistory
 * @property {...ABTNodeClient.ResponseBlockletMeta} getBlockletMeta
 * @property {...ABTNodeClient.ResponseGetNotifications} getNotifications
 * @property {...ABTNodeClient.ResponseGetRoutingSites} getRoutingSites
 * @property {...ABTNodeClient.ResponseGetRoutingSnapshots} getRoutingSnapshots
 * @property {...ABTNodeClient.ResponseGetSnapshotSites} getSnapshotSites
 * @property {...ABTNodeClient.ResponseGetRoutingProviders} getRoutingProviders
 * @property {...ABTNodeClient.ResponseGetCertificates} getCertificates
 * @property {...ABTNodeClient.ResponseCheckDomains} checkDomains
 * @property {...ABTNodeClient.ResponseFindCertificateByDomain} findCertificateByDomain
 * @property {...ABTNodeClient.ResponseAccessKeys} getAccessKeys
 * @property {...ABTNodeClient.ResponseWebHooks} getWebHooks
 * @property {...ABTNodeClient.ResponseSenderList} getWebhookSenders
 * @property {...ABTNodeClient.ResponseSendMsg} sendTestMessage
 * @property {...ABTNodeClient.ResponseGetSession} getSession
 * @property {...ABTNodeClient.ResponseRoles} getRoles
 * @property {...ABTNodeClient.ResponsePermissions} getPermissions
 * @property {...ABTNodeClient.ResponseGetInvitations} getInvitations
 * @property {...ABTNodeClient.ResponseUsers} getUsers
 * @property {...ABTNodeClient.ResponseUser} getUser
 * @property {...ABTNodeClient.ResponseGetUsersCountPerRole} getUsersCountPerRole
 * @property {...ABTNodeClient.ResponseUser} getOwner
 * @property {...ABTNodeClient.ResponsePermissions} getPermissionsByRole
 * @property {...ABTNodeClient.ResponseGetPassportIssuances} getPassportIssuances
 * @property {...ABTNodeClient.ResponseGetAuditLogs} getAuditLogs
 */

/**
 * Structure of ABTNodeClient.RequestLimit 
 *
 * Checkout the following snippet for the format of RequestLimit:
 * ```json
{
  "enabled": true,
  "ipHeader": "abc"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RequestLimit
 * @property {boolean} enabled
 * @property {undefined} rate
 * @property {string} ipHeader
 */

/**
 * Structure of ABTNodeClient.Requirement
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Requirement
 * @property {string} server
 * @property {undefined} os
 * @property {undefined} cpu
 * @property {Array<...ABTNodeClient.null>} fuels
 */

/**
 * Structure of ABTNodeClient.ResponseAccessKeys
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseAccessKeys
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} list
 */

/**
 * Structure of ABTNodeClient.ResponseAddLetsEncryptCert 
 *
 * Checkout the following snippet for the format of ResponseAddLetsEncryptCert:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseAddLetsEncryptCert
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseAddNginxHttpsCert 
 *
 * Checkout the following snippet for the format of ResponseAddNginxHttpsCert:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseAddNginxHttpsCert
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseBlocklet
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlocklet
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.BlockletState} blocklet
 */

/**
 * Structure of ABTNodeClient.ResponseBlockletDiff
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlockletDiff
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.BlockletDiff} blockletDiff
 */

/**
 * Structure of ABTNodeClient.ResponseBlockletInfo 
 *
 * Checkout the following snippet for the format of ResponseBlockletInfo:
 * ```json
{
  "code": "ok",
  "blockletDid": "abc",
  "isExternal": true,
  "isInstalled": true,
  "isRunning": true
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlockletInfo
 * @property {...ABTNodeClient.StatusCode} code
 * @property {string} blockletDid
 * @property {boolean} isExternal
 * @property {boolean} isInstalled
 * @property {boolean} isRunning
 */

/**
 * Structure of ABTNodeClient.ResponseBlockletMeta 
 *
 * Checkout the following snippet for the format of ResponseBlockletMeta:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlockletMeta
 * @property {...ABTNodeClient.StatusCode} code
 * @property {undefined} meta
 */

/**
 * Structure of ABTNodeClient.ResponseBlockletMetaFromUrl
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlockletMetaFromUrl
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.BlockletMeta} meta
 * @property {boolean} isFree
 * @property {boolean} inStore
 * @property {string} registryUrl
 */

/**
 * Structure of ABTNodeClient.ResponseBlockletRuntimeHistory
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseBlockletRuntimeHistory
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} history
 */

/**
 * Structure of ABTNodeClient.ResponseCheckComponentsForUpdates
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCheckComponentsForUpdates
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.BlockletPreUpdateInfo} preUpdateInfo
 */

/**
 * Structure of ABTNodeClient.ResponseCheckDomains 
 *
 * Checkout the following snippet for the format of ResponseCheckDomains:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCheckDomains
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseCheckNodeVersion 
 *
 * Checkout the following snippet for the format of ResponseCheckNodeVersion:
 * ```json
{
  "code": "ok",
  "version": "abc"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCheckNodeVersion
 * @property {...ABTNodeClient.StatusCode} code
 * @property {string} version
 */

/**
 * Structure of ABTNodeClient.ResponseCreateAccessKey 
 *
 * Checkout the following snippet for the format of ResponseCreateAccessKey:
 * ```json
{
  "code": "ok",
  "data": {
    "accessKeyId": "abc",
    "accessKeySecret": "abc",
    "remark": "abc",
    "passport": "abc",
    "createdAt": "abc",
    "lastUsedAt": "abc"
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCreateAccessKey
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.CreateAccessKey} data
 */

/**
 * Structure of ABTNodeClient.ResponseCreateInvitation
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCreateInvitation
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.InviteInfo} inviteInfo
 */

/**
 * Structure of ABTNodeClient.ResponseCreatePassportIssuance 
 *
 * Checkout the following snippet for the format of ResponseCreatePassportIssuance:
 * ```json
{
  "code": "ok",
  "info": {
    "id": "abc",
    "name": "abc",
    "title": "abc",
    "expireDate": "abc",
    "teamDid": "abc",
    "ownerDid": "abc"
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCreatePassportIssuance
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.PassportIssuanceInfo} info
 */

/**
 * Structure of ABTNodeClient.ResponseCreateTransferNodeInvitation
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCreateTransferNodeInvitation
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.InviteInfo} inviteInfo
 */

/**
 * Structure of ABTNodeClient.ResponseCreateWebHook
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseCreateWebHook
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.WebHookSender} webhook
 */

/**
 * Structure of ABTNodeClient.ResponseDelegationState 
 *
 * Checkout the following snippet for the format of ResponseDelegationState:
 * ```json
{
  "code": "ok",
  "state": {
    "delegated": true
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseDelegationState
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.DelegationState} state
 */

/**
 * Structure of ABTNodeClient.ResponseDeleteAccessKey 
 *
 * Checkout the following snippet for the format of ResponseDeleteAccessKey:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseDeleteAccessKey
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseDeleteNginxHttpsCert 
 *
 * Checkout the following snippet for the format of ResponseDeleteNginxHttpsCert:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseDeleteNginxHttpsCert
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseDeleteWebHook 
 *
 * Checkout the following snippet for the format of ResponseDeleteWebHook:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseDeleteWebHook
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseFindCertificateByDomain
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseFindCertificateByDomain
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.Certificate} cert
 */

/**
 * Structure of ABTNodeClient.ResponseGateway 
 *
 * Checkout the following snippet for the format of ResponseGateway:
 * ```json
{
  "code": "ok",
  "gateway": {
    "requestLimit": {
      "enabled": true,
      "ipHeader": "abc"
    }
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGateway
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.Gateway} gateway
 */

/**
 * Structure of ABTNodeClient.ResponseGetAuditLogs
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetAuditLogs
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} list
 * @property {...ABTNodeClient.Paging} paging
 */

/**
 * Structure of ABTNodeClient.ResponseGetBlocklets
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetBlocklets
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} blocklets
 */

/**
 * Structure of ABTNodeClient.ResponseGetCertificates
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetCertificates
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} certificates
 */

/**
 * Structure of ABTNodeClient.ResponseGetInvitations
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetInvitations
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} invitations
 */

/**
 * Structure of ABTNodeClient.ResponseGetNodeEnv
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetNodeEnv
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.NodeEnvInfo} info
 */

/**
 * Structure of ABTNodeClient.ResponseGetNodeInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetNodeInfo
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.NodeState} info
 */

/**
 * Structure of ABTNodeClient.ResponseGetNotifications
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetNotifications
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} list
 * @property {...ABTNodeClient.Paging} paging
 */

/**
 * Structure of ABTNodeClient.ResponseGetPassportIssuances
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetPassportIssuances
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} list
 */

/**
 * Structure of ABTNodeClient.ResponseGetRoutingProviders
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetRoutingProviders
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} providers
 */

/**
 * Structure of ABTNodeClient.ResponseGetRoutingSites
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetRoutingSites
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} sites
 */

/**
 * Structure of ABTNodeClient.ResponseGetRoutingSnapshots
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetRoutingSnapshots
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} snapshots
 */

/**
 * Structure of ABTNodeClient.ResponseGetSession 
 *
 * Checkout the following snippet for the format of ResponseGetSession:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetSession
 * @property {...ABTNodeClient.StatusCode} code
 * @property {undefined} session
 */

/**
 * Structure of ABTNodeClient.ResponseGetSnapshotSites
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetSnapshotSites
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} sites
 */

/**
 * Structure of ABTNodeClient.ResponseGetUsersCountPerRole
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseGetUsersCountPerRole
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} counts
 */

/**
 * Structure of ABTNodeClient.ResponseInstallFromVc
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseInstallFromVc
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.BlockletState} blocklet
 */

/**
 * Structure of ABTNodeClient.ResponseLatestBlockletVersion 
 *
 * Checkout the following snippet for the format of ResponseLatestBlockletVersion:
 * ```json
{
  "code": "ok",
  "data": {
    "did": "abc",
    "version": "abc",
    "registryUrl": "abc"
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseLatestBlockletVersion
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.LatestBlockletVersion} data
 */

/**
 * Structure of ABTNodeClient.ResponseNodeRuntimeHistory
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseNodeRuntimeHistory
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} history
 */

/**
 * Structure of ABTNodeClient.ResponsePermission 
 *
 * Checkout the following snippet for the format of ResponsePermission:
 * ```json
{
  "code": "ok",
  "permission": {
    "name": "abc",
    "description": "abc",
    "isProtected": true
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponsePermission
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.Permission} permission
 */

/**
 * Structure of ABTNodeClient.ResponsePermissions
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponsePermissions
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} permissions
 */

/**
 * Structure of ABTNodeClient.ResponseReadNotifications 
 *
 * Checkout the following snippet for the format of ResponseReadNotifications:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseReadNotifications
 * @property {...ABTNodeClient.StatusCode} code
 * @property {undefined} numAffected
 */

/**
 * Structure of ABTNodeClient.ResponseResetNode 
 *
 * Checkout the following snippet for the format of ResponseResetNode:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseResetNode
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseRestartServer 
 *
 * Checkout the following snippet for the format of ResponseRestartServer:
 * ```json
{
  "code": "ok",
  "sessionId": "abc"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseRestartServer
 * @property {...ABTNodeClient.StatusCode} code
 * @property {string} sessionId
 */

/**
 * Structure of ABTNodeClient.ResponseRole
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseRole
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.Role} role
 */

/**
 * Structure of ABTNodeClient.ResponseRoles
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseRoles
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} roles
 */

/**
 * Structure of ABTNodeClient.ResponseRoutingSite
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseRoutingSite
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.RoutingSite} site
 */

/**
 * Structure of ABTNodeClient.ResponseSendMsg 
 *
 * Checkout the following snippet for the format of ResponseSendMsg:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseSendMsg
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseSenderList
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseSenderList
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} senders
 */

/**
 * Structure of ABTNodeClient.ResponseTakeRoutingSnapshot 
 *
 * Checkout the following snippet for the format of ResponseTakeRoutingSnapshot:
 * ```json
{
  "code": "ok",
  "hash": "abc"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseTakeRoutingSnapshot
 * @property {...ABTNodeClient.StatusCode} code
 * @property {string} hash
 */

/**
 * Structure of ABTNodeClient.ResponseUpdateAccessKey 
 *
 * Checkout the following snippet for the format of ResponseUpdateAccessKey:
 * ```json
{
  "code": "ok",
  "data": {
    "accessKeyId": "abc",
    "remark": "abc",
    "passport": "abc",
    "createdAt": "abc",
    "lastUsedAt": "abc",
    "createdBy": "abc",
    "updatedBy": "abc"
  }
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseUpdateAccessKey
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.AccessKey} data
 */

/**
 * Structure of ABTNodeClient.ResponseUpdateNginxHttpsCert 
 *
 * Checkout the following snippet for the format of ResponseUpdateNginxHttpsCert:
 * ```json
{
  "code": "ok"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseUpdateNginxHttpsCert
 * @property {...ABTNodeClient.StatusCode} code
 */

/**
 * Structure of ABTNodeClient.ResponseUpgradeNodeVersion 
 *
 * Checkout the following snippet for the format of ResponseUpgradeNodeVersion:
 * ```json
{
  "code": "ok",
  "sessionId": "abc"
}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseUpgradeNodeVersion
 * @property {...ABTNodeClient.StatusCode} code
 * @property {string} sessionId
 */

/**
 * Structure of ABTNodeClient.ResponseUser
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseUser
 * @property {...ABTNodeClient.StatusCode} code
 * @property {...ABTNodeClient.UserInfo} user
 */

/**
 * Structure of ABTNodeClient.ResponseUsers
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseUsers
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} users
 * @property {...ABTNodeClient.Paging} paging
 */

/**
 * Structure of ABTNodeClient.ResponseWebHooks
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResponseWebHooks
 * @property {...ABTNodeClient.StatusCode} code
 * @property {Array<...ABTNodeClient.null>} webhooks
 */

/**
 * Structure of ABTNodeClient.Role
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.Role
 * @property {string} name
 * @property {string} description
 * @property {Array<...ABTNodeClient.null>} grants
 * @property {string} title
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.RoutingProvider
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingProvider
 * @property {string} name
 * @property {string} description
 * @property {boolean} running
 * @property {boolean} available
 * @property {string} error
 */

/**
 * Structure of ABTNodeClient.RoutingRule
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRule
 * @property {string} id
 * @property {...ABTNodeClient.RoutingRuleFrom} from
 * @property {...ABTNodeClient.RoutingRuleTo} to
 * @property {boolean} isProtected
 */

/**
 * Structure of ABTNodeClient.RoutingRuleFrom
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleFrom
 * @property {string} pathPrefix
 * @property {Array<...ABTNodeClient.null>} header
 */

/**
 * Structure of ABTNodeClient.RoutingRuleHeader
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleHeader
 * @property {string} key
 * @property {string} value
 * @property {...ABTNodeClient.HeaderMatchType} type
 */

/**
 * Structure of ABTNodeClient.RoutingRuleTo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingRuleTo
 * @property {undefined} port
 * @property {...ABTNodeClient.BackendServiceType} type
 * @property {string} did
 * @property {string} url
 * @property {undefined} redirectCode
 * @property {string} interfaceName
 * @property {string} componentId
 */

/**
 * Structure of ABTNodeClient.RoutingSite
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingSite
 * @property {string} id
 * @property {string} domain
 * @property {Array<...ABTNodeClient.null>} domainAliases
 * @property {Array<...ABTNodeClient.null>} rules
 * @property {boolean} isProtected
 * @property {Array<...ABTNodeClient.null>} corsAllowedOrigins
 */

/**
 * Structure of ABTNodeClient.RoutingSnapshot
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RoutingSnapshot
 * @property {string} hash
 * @property {string} tree
 * @property {string} message
 * @property {string} author
 * @property {string} createdAt
 */

/**
 * Structure of ABTNodeClient.RuntimeInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RuntimeInfo
 * @property {string} pid
 * @property {string} port
 * @property {string} uptime
 * @property {undefined} memoryUsage
 * @property {undefined} cpuUsage
 */

/**
 * Structure of ABTNodeClient.TrustedPassport
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassport
 * @property {string} issuerDid
 * @property {string} remark
 * @property {Array<...ABTNodeClient.null>} mappings
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMapping
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMapping
 * @property {...ABTNodeClient.TrustedPassportMappingFrom} from
 * @property {...ABTNodeClient.TrustedPassportMappingTo} to
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMappingFrom
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMappingFrom
 * @property {string} passport
 */

/**
 * Structure of ABTNodeClient.TrustedPassportMappingTo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TrustedPassportMappingTo
 * @property {string} role
 */

/**
 * Structure of ABTNodeClient.UpdateList
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateList
 * @property {string} id
 * @property {...ABTNodeClient.BlockletMeta} meta
 */

/**
 * Structure of ABTNodeClient.UserInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UserInfo
 * @property {string} did
 * @property {string} pk
 * @property {string} role
 * @property {string} avatar
 * @property {string} fullName
 * @property {string} email
 * @property {boolean} approved
 * @property {string} createdAt
 * @property {string} updatedAt
 * @property {string} locale
 * @property {Array<...ABTNodeClient.null>} passports
 * @property {string} firstLoginAt
 * @property {string} lastLoginAt
 * @property {string} remark
 */

/**
 * Structure of ABTNodeClient.WalletInfo
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.WalletInfo
 * @property {string} did
 * @property {string} pk
 */

/**
 * Structure of ABTNodeClient.WebHookParam
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.WebHookParam
 * @property {string} name
 * @property {string} description
 * @property {boolean} required
 * @property {string} defaultValue
 * @property {string} value
 * @property {string} type
 */

/**
 * Structure of ABTNodeClient.WebHookRecord
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.WebHookRecord
 * @property {...ABTNodeClient.SenderType} type
 * @property {string} id
 * @property {Array<...ABTNodeClient.null>} params
 * @property {string} createdAt
 */

/**
 * Structure of ABTNodeClient.WebHookSender
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.WebHookSender
 * @property {...ABTNodeClient.SenderType} type
 * @property {string} title
 * @property {string} description
 * @property {Array<...ABTNodeClient.null>} params
 */

/**
 * Structure of ABTNodeClient.GetBlockletParams 
 *
 * Checkout the following snippet for the format of GetBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletMetaFromUrlParams 
 *
 * Checkout the following snippet for the format of GetBlockletMetaFromUrlParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletMetaFromUrlParams
 * @property {...ABTNodeClient.RequestBlockletMetaFromUrlInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletByBundleParams 
 *
 * Checkout the following snippet for the format of GetBlockletByBundleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletByBundleParams
 * @property {...ABTNodeClient.RequestBlockletBundleInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletDiffParams 
 *
 * Checkout the following snippet for the format of GetBlockletDiffParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletDiffParams
 * @property {...ABTNodeClient.RequestBlockletDiffInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletsParams 
 *
 * Checkout the following snippet for the format of GetBlockletsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletsParams
 * @property {...ABTNodeClient.RequestGetBlockletsInput} input
 */

/**
 * Structure of ABTNodeClient.GetLatestBlockletVersionParams 
 *
 * Checkout the following snippet for the format of GetLatestBlockletVersionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetLatestBlockletVersionParams
 * @property {...ABTNodeClient.RequestLatestBlockletVersionInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletRuntimeHistoryParams 
 *
 * Checkout the following snippet for the format of GetBlockletRuntimeHistoryParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletRuntimeHistoryParams
 * @property {...ABTNodeClient.RequestBlockletRuntimeHistoryInput} input
 */

/**
 * Structure of ABTNodeClient.GetNodeRuntimeHistoryParams 
 *
 * Checkout the following snippet for the format of GetNodeRuntimeHistoryParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetNodeRuntimeHistoryParams
 * @property {...ABTNodeClient.RequestNodeRuntimeHistoryInput} input
 */

/**
 * Structure of ABTNodeClient.GetBlockletMetaParams 
 *
 * Checkout the following snippet for the format of GetBlockletMetaParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetBlockletMetaParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.GetNotificationsParams 
 *
 * Checkout the following snippet for the format of GetNotificationsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetNotificationsParams
 * @property {...ABTNodeClient.RequestGetNotificationsInput} input
 */

/**
 * Structure of ABTNodeClient.GetRoutingSitesParams 
 *
 * Checkout the following snippet for the format of GetRoutingSitesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetRoutingSitesParams
 * @property {...ABTNodeClient.RequestGetRoutingSitesInput} input
 */

/**
 * Structure of ABTNodeClient.GetRoutingSnapshotsParams 
 *
 * Checkout the following snippet for the format of GetRoutingSnapshotsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetRoutingSnapshotsParams
 * @property {...ABTNodeClient.RequestGetRoutingSnapshotsInput} input
 */

/**
 * Structure of ABTNodeClient.GetSnapshotSitesParams 
 *
 * Checkout the following snippet for the format of GetSnapshotSitesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetSnapshotSitesParams
 * @property {...ABTNodeClient.RequestGetSnapshotSitesInput} input
 */

/**
 * Structure of ABTNodeClient.CheckDomainsParams 
 *
 * Checkout the following snippet for the format of CheckDomainsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CheckDomainsParams
 * @property {...ABTNodeClient.RequestCheckDomainsInput} input
 */

/**
 * Structure of ABTNodeClient.FindCertificateByDomainParams 
 *
 * Checkout the following snippet for the format of FindCertificateByDomainParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.FindCertificateByDomainParams
 * @property {...ABTNodeClient.RequestFindCertificateByDomainInput} input
 */

/**
 * Structure of ABTNodeClient.SendTestMessageParams 
 *
 * Checkout the following snippet for the format of SendTestMessageParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.SendTestMessageParams
 * @property {...ABTNodeClient.RequestSendMsgInput} input
 */

/**
 * Structure of ABTNodeClient.GetSessionParams 
 *
 * Checkout the following snippet for the format of GetSessionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetSessionParams
 * @property {...ABTNodeClient.RequestGetSessionInput} input
 */

/**
 * Structure of ABTNodeClient.GetRolesParams 
 *
 * Checkout the following snippet for the format of GetRolesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetRolesParams
 * @property {...ABTNodeClient.TeamInput} input
 */

/**
 * Structure of ABTNodeClient.GetPermissionsParams 
 *
 * Checkout the following snippet for the format of GetPermissionsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetPermissionsParams
 * @property {...ABTNodeClient.TeamInput} input
 */

/**
 * Structure of ABTNodeClient.GetInvitationsParams 
 *
 * Checkout the following snippet for the format of GetInvitationsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetInvitationsParams
 * @property {...ABTNodeClient.TeamInput} input
 */

/**
 * Structure of ABTNodeClient.GetUsersParams 
 *
 * Checkout the following snippet for the format of GetUsersParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetUsersParams
 * @property {...ABTNodeClient.RequestUsersInput} input
 */

/**
 * Structure of ABTNodeClient.GetUserParams 
 *
 * Checkout the following snippet for the format of GetUserParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetUserParams
 * @property {...ABTNodeClient.RequestTeamUserInput} input
 */

/**
 * Structure of ABTNodeClient.GetUsersCountPerRoleParams 
 *
 * Checkout the following snippet for the format of GetUsersCountPerRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetUsersCountPerRoleParams
 * @property {...ABTNodeClient.TeamInput} input
 */

/**
 * Structure of ABTNodeClient.GetOwnerParams 
 *
 * Checkout the following snippet for the format of GetOwnerParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetOwnerParams
 * @property {...ABTNodeClient.TeamInput} input
 */

/**
 * Structure of ABTNodeClient.GetPermissionsByRoleParams 
 *
 * Checkout the following snippet for the format of GetPermissionsByRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetPermissionsByRoleParams
 * @property {...ABTNodeClient.RequestTeamRoleInput} input
 */

/**
 * Structure of ABTNodeClient.GetPassportIssuancesParams 
 *
 * Checkout the following snippet for the format of GetPassportIssuancesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetPassportIssuancesParams
 * @property {...ABTNodeClient.RequestGetPassportIssuancesInput} input
 */

/**
 * Structure of ABTNodeClient.GetAuditLogsParams 
 *
 * Checkout the following snippet for the format of GetAuditLogsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GetAuditLogsParams
 * @property {...ABTNodeClient.RequestGetAuditLogsInput} input
 */

/**
 * Structure of ABTNodeClient.InstallBlockletParams 
 *
 * Checkout the following snippet for the format of InstallBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.InstallBlockletParams
 * @property {...ABTNodeClient.RequestVersionedBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.InstallBlockletFromVcParams 
 *
 * Checkout the following snippet for the format of InstallBlockletFromVcParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.InstallBlockletFromVcParams
 * @property {...ABTNodeClient.RequestInstallFromVcInput} input
 */

/**
 * Structure of ABTNodeClient.InstallComponentParams 
 *
 * Checkout the following snippet for the format of InstallComponentParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.InstallComponentParams
 * @property {...ABTNodeClient.RequestInstallComponentInput} input
 */

/**
 * Structure of ABTNodeClient.StartBlockletParams 
 *
 * Checkout the following snippet for the format of StartBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.StartBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.StopBlockletParams 
 *
 * Checkout the following snippet for the format of StopBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.StopBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.ReloadBlockletParams 
 *
 * Checkout the following snippet for the format of ReloadBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ReloadBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.RestartBlockletParams 
 *
 * Checkout the following snippet for the format of RestartBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RestartBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteBlockletParams 
 *
 * Checkout the following snippet for the format of DeleteBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteBlockletParams
 * @property {...ABTNodeClient.RequestDeleteBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteComponentParams 
 *
 * Checkout the following snippet for the format of DeleteComponentParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteComponentParams
 * @property {...ABTNodeClient.RequestDeleteComponentInput} input
 */

/**
 * Structure of ABTNodeClient.CancelDownloadBlockletParams 
 *
 * Checkout the following snippet for the format of CancelDownloadBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CancelDownloadBlockletParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.UpgradeBlockletParams 
 *
 * Checkout the following snippet for the format of UpgradeBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpgradeBlockletParams
 * @property {...ABTNodeClient.RequestUpgradeBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.CheckComponentsForUpdatesParams 
 *
 * Checkout the following snippet for the format of CheckComponentsForUpdatesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CheckComponentsForUpdatesParams
 * @property {...ABTNodeClient.RequestBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.UpgradeComponentsParams 
 *
 * Checkout the following snippet for the format of UpgradeComponentsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpgradeComponentsParams
 * @property {...ABTNodeClient.RequestUpdateComponentsInput} input
 */

/**
 * Structure of ABTNodeClient.ConfigBlockletParams 
 *
 * Checkout the following snippet for the format of ConfigBlockletParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigBlockletParams
 * @property {...ABTNodeClient.RequestConfigBlockletInput} input
 */

/**
 * Structure of ABTNodeClient.ConfigPublicToStoreParams 
 *
 * Checkout the following snippet for the format of ConfigPublicToStoreParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigPublicToStoreParams
 * @property {...ABTNodeClient.RequestConfigPublicToStoreInput} input
 */

/**
 * Structure of ABTNodeClient.ConfigNavigationsParams 
 *
 * Checkout the following snippet for the format of ConfigNavigationsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigNavigationsParams
 * @property {...ABTNodeClient.RequestConfigNavigationsInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateWhoCanAccessParams 
 *
 * Checkout the following snippet for the format of UpdateWhoCanAccessParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateWhoCanAccessParams
 * @property {...ABTNodeClient.RequestUpdateWhoCanAccessInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateComponentTitleParams 
 *
 * Checkout the following snippet for the format of UpdateComponentTitleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateComponentTitleParams
 * @property {...ABTNodeClient.RequestUpdateComponentTitleInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateComponentMountPointParams 
 *
 * Checkout the following snippet for the format of UpdateComponentMountPointParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateComponentMountPointParams
 * @property {...ABTNodeClient.RequestUpdateComponentMountPointInput} input
 */

/**
 * Structure of ABTNodeClient.BackupToSpacesParams 
 *
 * Checkout the following snippet for the format of BackupToSpacesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.BackupToSpacesParams
 * @property {...ABTNodeClient.RequestBackupToSpacesInput} input
 */

/**
 * Structure of ABTNodeClient.RestoreFromSpacesParams 
 *
 * Checkout the following snippet for the format of RestoreFromSpacesParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RestoreFromSpacesParams
 * @property {...ABTNodeClient.RequestRestoreFromSpacesInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateNodeInfoParams 
 *
 * Checkout the following snippet for the format of UpdateNodeInfoParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateNodeInfoParams
 * @property {...ABTNodeClient.NodeInfoInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateNodeRoutingParams 
 *
 * Checkout the following snippet for the format of UpdateNodeRoutingParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateNodeRoutingParams
 * @property {...ABTNodeClient.RequestNodeRoutingInput} input
 */

/**
 * Structure of ABTNodeClient.ResetNodeParams 
 *
 * Checkout the following snippet for the format of ResetNodeParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ResetNodeParams
 * @property {...ABTNodeClient.RequestResetNodeInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateGatewayParams 
 *
 * Checkout the following snippet for the format of UpdateGatewayParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateGatewayParams
 * @property {...ABTNodeClient.RequestGatewayInput} input
 */

/**
 * Structure of ABTNodeClient.CreateMemberInvitationParams 
 *
 * Checkout the following snippet for the format of CreateMemberInvitationParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateMemberInvitationParams
 * @property {...ABTNodeClient.RequestCreateInvitationInput} input
 */

/**
 * Structure of ABTNodeClient.CreateTransferInvitationParams 
 *
 * Checkout the following snippet for the format of CreateTransferInvitationParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateTransferInvitationParams
 * @property {...ABTNodeClient.RequestCreateTransferNodeInvitationInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteInvitationParams 
 *
 * Checkout the following snippet for the format of DeleteInvitationParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteInvitationParams
 * @property {...ABTNodeClient.RequsetDeleteInvitationInput} input
 */

/**
 * Structure of ABTNodeClient.CreatePassportIssuanceParams 
 *
 * Checkout the following snippet for the format of CreatePassportIssuanceParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreatePassportIssuanceParams
 * @property {...ABTNodeClient.RequestCreatePassportIssuanceInput} input
 */

/**
 * Structure of ABTNodeClient.DeletePassportIssuanceParams 
 *
 * Checkout the following snippet for the format of DeletePassportIssuanceParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeletePassportIssuanceParams
 * @property {...ABTNodeClient.RequestDeleteTeamSessionInput} input
 */

/**
 * Structure of ABTNodeClient.ConfigTrustedPassportsParams 
 *
 * Checkout the following snippet for the format of ConfigTrustedPassportsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigTrustedPassportsParams
 * @property {...ABTNodeClient.RequestConfigTrustedPassportsInput} input
 */

/**
 * Structure of ABTNodeClient.ConfigPassportIssuanceParams 
 *
 * Checkout the following snippet for the format of ConfigPassportIssuanceParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ConfigPassportIssuanceParams
 * @property {...ABTNodeClient.RequestConfigPassportIssuanceInput} input
 */

/**
 * Structure of ABTNodeClient.RemoveUserParams 
 *
 * Checkout the following snippet for the format of RemoveUserParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RemoveUserParams
 * @property {...ABTNodeClient.RequestTeamUserInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateUserApprovalParams 
 *
 * Checkout the following snippet for the format of UpdateUserApprovalParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateUserApprovalParams
 * @property {...ABTNodeClient.RequestTeamUserInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateUserRoleParams 
 *
 * Checkout the following snippet for the format of UpdateUserRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateUserRoleParams
 * @property {...ABTNodeClient.RequestTeamUserInput} input
 */

/**
 * Structure of ABTNodeClient.IssuePassportToUserParams 
 *
 * Checkout the following snippet for the format of IssuePassportToUserParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.IssuePassportToUserParams
 * @property {...ABTNodeClient.RequestIssuePassportToUserInput} input
 */

/**
 * Structure of ABTNodeClient.RevokeUserPassportParams 
 *
 * Checkout the following snippet for the format of RevokeUserPassportParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RevokeUserPassportParams
 * @property {...ABTNodeClient.RequestRevokeUserPassportInput} input
 */

/**
 * Structure of ABTNodeClient.EnableUserPassportParams 
 *
 * Checkout the following snippet for the format of EnableUserPassportParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.EnableUserPassportParams
 * @property {...ABTNodeClient.RequestRevokeUserPassportInput} input
 */

/**
 * Structure of ABTNodeClient.CreateRoleParams 
 *
 * Checkout the following snippet for the format of CreateRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateRoleParams
 * @property {...ABTNodeClient.RequestCreateRoleInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateRoleParams 
 *
 * Checkout the following snippet for the format of UpdateRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateRoleParams
 * @property {...ABTNodeClient.RequestTeamRoleInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteRoleParams 
 *
 * Checkout the following snippet for the format of DeleteRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteRoleParams
 * @property {...ABTNodeClient.RequestDeleteRoleInput} input
 */

/**
 * Structure of ABTNodeClient.CreatePermissionParams 
 *
 * Checkout the following snippet for the format of CreatePermissionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreatePermissionParams
 * @property {...ABTNodeClient.RequestCreatePermissionInput} input
 */

/**
 * Structure of ABTNodeClient.UpdatePermissionParams 
 *
 * Checkout the following snippet for the format of UpdatePermissionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdatePermissionParams
 * @property {...ABTNodeClient.RequestTeamPermissionInput} input
 */

/**
 * Structure of ABTNodeClient.DeletePermissionParams 
 *
 * Checkout the following snippet for the format of DeletePermissionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeletePermissionParams
 * @property {...ABTNodeClient.RequestDeletePermissionInput} input
 */

/**
 * Structure of ABTNodeClient.GrantPermissionForRoleParams 
 *
 * Checkout the following snippet for the format of GrantPermissionForRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.GrantPermissionForRoleParams
 * @property {...ABTNodeClient.RequestGrantPermissionForRoleInput} input
 */

/**
 * Structure of ABTNodeClient.RevokePermissionFromRoleParams 
 *
 * Checkout the following snippet for the format of RevokePermissionFromRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.RevokePermissionFromRoleParams
 * @property {...ABTNodeClient.RequestRevokePermissionFromRoleInput} input
 */

/**
 * Structure of ABTNodeClient.UpdatePermissionsForRoleParams 
 *
 * Checkout the following snippet for the format of UpdatePermissionsForRoleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdatePermissionsForRoleParams
 * @property {...ABTNodeClient.RequestUpdatePermissionsForRoleInput} input
 */

/**
 * Structure of ABTNodeClient.HasPermissionParams 
 *
 * Checkout the following snippet for the format of HasPermissionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.HasPermissionParams
 * @property {...ABTNodeClient.RequestHasPermissionInput} input
 */

/**
 * Structure of ABTNodeClient.AddBlockletStoreParams 
 *
 * Checkout the following snippet for the format of AddBlockletStoreParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AddBlockletStoreParams
 * @property {...ABTNodeClient.RequestChangeBlockletStoreInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteBlockletStoreParams 
 *
 * Checkout the following snippet for the format of DeleteBlockletStoreParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteBlockletStoreParams
 * @property {...ABTNodeClient.RequestChangeBlockletStoreInput} input
 */

/**
 * Structure of ABTNodeClient.ReadNotificationsParams 
 *
 * Checkout the following snippet for the format of ReadNotificationsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.ReadNotificationsParams
 * @property {...ABTNodeClient.RequestReadNotificationsInput} input
 */

/**
 * Structure of ABTNodeClient.UnreadNotificationsParams 
 *
 * Checkout the following snippet for the format of UnreadNotificationsParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UnreadNotificationsParams
 * @property {...ABTNodeClient.RequestReadNotificationsInput} input
 */

/**
 * Structure of ABTNodeClient.AddRoutingSiteParams 
 *
 * Checkout the following snippet for the format of AddRoutingSiteParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AddRoutingSiteParams
 * @property {...ABTNodeClient.RequestAddRoutingSiteInput} input
 */

/**
 * Structure of ABTNodeClient.AddDomainAliasParams 
 *
 * Checkout the following snippet for the format of AddDomainAliasParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AddDomainAliasParams
 * @property {...ABTNodeClient.RequestAddDomainAliasInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteDomainAliasParams 
 *
 * Checkout the following snippet for the format of DeleteDomainAliasParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteDomainAliasParams
 * @property {...ABTNodeClient.RequestDeleteDomainAliasInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteRoutingSiteParams 
 *
 * Checkout the following snippet for the format of DeleteRoutingSiteParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteRoutingSiteParams
 * @property {...ABTNodeClient.RequestDeleteRoutingSiteInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateRoutingSiteParams 
 *
 * Checkout the following snippet for the format of UpdateRoutingSiteParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateRoutingSiteParams
 * @property {...ABTNodeClient.RequestUpdateRoutingSiteInput} input
 */

/**
 * Structure of ABTNodeClient.AddRoutingRuleParams 
 *
 * Checkout the following snippet for the format of AddRoutingRuleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AddRoutingRuleParams
 * @property {...ABTNodeClient.RequestAddRoutingRuleInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateRoutingRuleParams 
 *
 * Checkout the following snippet for the format of UpdateRoutingRuleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateRoutingRuleParams
 * @property {...ABTNodeClient.RequestUpdateRoutingRuleInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteRoutingRuleParams 
 *
 * Checkout the following snippet for the format of DeleteRoutingRuleParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteRoutingRuleParams
 * @property {...ABTNodeClient.RequestDeleteRoutingRuleInput} input
 */

/**
 * Structure of ABTNodeClient.TakeRoutingSnapshotParams 
 *
 * Checkout the following snippet for the format of TakeRoutingSnapshotParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.TakeRoutingSnapshotParams
 * @property {...ABTNodeClient.RequestTakeRoutingSnapshotInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateCertificateParams 
 *
 * Checkout the following snippet for the format of UpdateCertificateParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateCertificateParams
 * @property {...ABTNodeClient.RequestUpdateNginxHttpsCertInput} input
 */

/**
 * Structure of ABTNodeClient.AddCertificateParams 
 *
 * Checkout the following snippet for the format of AddCertificateParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.AddCertificateParams
 * @property {...ABTNodeClient.RequestAddNginxHttpsCertInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteCertificateParams 
 *
 * Checkout the following snippet for the format of DeleteCertificateParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteCertificateParams
 * @property {...ABTNodeClient.RequestDeleteNginxHttpsCertInput} input
 */

/**
 * Structure of ABTNodeClient.IssueLetsEncryptCertParams 
 *
 * Checkout the following snippet for the format of IssueLetsEncryptCertParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.IssueLetsEncryptCertParams
 * @property {...ABTNodeClient.RequestAddLetsEncryptCertInput} input
 */

/**
 * Structure of ABTNodeClient.CreateAccessKeyParams 
 *
 * Checkout the following snippet for the format of CreateAccessKeyParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateAccessKeyParams
 * @property {...ABTNodeClient.RequestCreateAccessKeyInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateAccessKeyParams 
 *
 * Checkout the following snippet for the format of UpdateAccessKeyParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateAccessKeyParams
 * @property {...ABTNodeClient.RequestUpdateAccessKeyInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteAccessKeyParams 
 *
 * Checkout the following snippet for the format of DeleteAccessKeyParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteAccessKeyParams
 * @property {...ABTNodeClient.RequestDeleteAccessKeyInput} input
 */

/**
 * Structure of ABTNodeClient.CreateWebHookParams 
 *
 * Checkout the following snippet for the format of CreateWebHookParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.CreateWebHookParams
 * @property {...ABTNodeClient.RequestCreateWebHookInput} input
 */

/**
 * Structure of ABTNodeClient.DeleteWebHookParams 
 *
 * Checkout the following snippet for the format of DeleteWebHookParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.DeleteWebHookParams
 * @property {...ABTNodeClient.RequestDeleteWebHookInput} input
 */

/**
 * Structure of ABTNodeClient.StartSessionParams 
 *
 * Checkout the following snippet for the format of StartSessionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.StartSessionParams
 * @property {...ABTNodeClient.RequestStartSessionInput} input
 */

/**
 * Structure of ABTNodeClient.UpdateSessionParams 
 *
 * Checkout the following snippet for the format of UpdateSessionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.UpdateSessionParams
 * @property {...ABTNodeClient.RequestUpdateSessionInput} input
 */

/**
 * Structure of ABTNodeClient.EndSessionParams 
 *
 * Checkout the following snippet for the format of EndSessionParams:
 * ```json
{}
 * ```
 *
 * @memberof ABTNodeClient
 * @typedef {object} ABTNodeClient.EndSessionParams
 * @property {...ABTNodeClient.RequestEndSessionInput} input
 */

/**
 * getBlocklet
 *
 * @name ABTNodeClient#getBlocklet
 * @param {ABTNodeClient.GetBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * getBlockletMetaFromUrl
 *
 * @name ABTNodeClient#getBlockletMetaFromUrl
 * @param {ABTNodeClient.GetBlockletMetaFromUrlParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlockletMetaFromUrl>} Checkout {@link ABTNodeClient.ResponseBlockletMetaFromUrl} for resolved data format
 */

/**
 * getBlockletByBundle
 *
 * @name ABTNodeClient#getBlockletByBundle
 * @param {ABTNodeClient.GetBlockletByBundleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlockletInfo>} Checkout {@link ABTNodeClient.ResponseBlockletInfo} for resolved data format
 */

/**
 * getBlockletDiff
 *
 * @name ABTNodeClient#getBlockletDiff
 * @param {ABTNodeClient.GetBlockletDiffParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlockletDiff>} Checkout {@link ABTNodeClient.ResponseBlockletDiff} for resolved data format
 */

/**
 * getBlocklets
 *
 * @name ABTNodeClient#getBlocklets
 * @param {ABTNodeClient.GetBlockletsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetBlocklets>} Checkout {@link ABTNodeClient.ResponseGetBlocklets} for resolved data format
 */

/**
 * getLatestBlockletVersion
 *
 * @name ABTNodeClient#getLatestBlockletVersion
 * @param {ABTNodeClient.GetLatestBlockletVersionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseLatestBlockletVersion>} Checkout {@link ABTNodeClient.ResponseLatestBlockletVersion} for resolved data format
 */

/**
 * getBlockletRuntimeHistory
 *
 * @name ABTNodeClient#getBlockletRuntimeHistory
 * @param {ABTNodeClient.GetBlockletRuntimeHistoryParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlockletRuntimeHistory>} Checkout {@link ABTNodeClient.ResponseBlockletRuntimeHistory} for resolved data format
 */

/**
 * getNodeInfo
 *
 * @name ABTNodeClient#getNodeInfo
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNodeInfo>} Checkout {@link ABTNodeClient.ResponseGetNodeInfo} for resolved data format
 */

/**
 * resetNodeStatus
 *
 * @name ABTNodeClient#resetNodeStatus
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNodeInfo>} Checkout {@link ABTNodeClient.ResponseGetNodeInfo} for resolved data format
 */

/**
 * getNodeEnv
 *
 * @name ABTNodeClient#getNodeEnv
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNodeEnv>} Checkout {@link ABTNodeClient.ResponseGetNodeEnv} for resolved data format
 */

/**
 * checkNodeVersion
 *
 * @name ABTNodeClient#checkNodeVersion
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCheckNodeVersion>} Checkout {@link ABTNodeClient.ResponseCheckNodeVersion} for resolved data format
 */

/**
 * getDelegationState
 *
 * @name ABTNodeClient#getDelegationState
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseDelegationState>} Checkout {@link ABTNodeClient.ResponseDelegationState} for resolved data format
 */

/**
 * getNodeRuntimeHistory
 *
 * @name ABTNodeClient#getNodeRuntimeHistory
 * @param {ABTNodeClient.GetNodeRuntimeHistoryParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseNodeRuntimeHistory>} Checkout {@link ABTNodeClient.ResponseNodeRuntimeHistory} for resolved data format
 */

/**
 * getBlockletMeta
 *
 * @name ABTNodeClient#getBlockletMeta
 * @param {ABTNodeClient.GetBlockletMetaParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlockletMeta>} Checkout {@link ABTNodeClient.ResponseBlockletMeta} for resolved data format
 */

/**
 * getNotifications
 *
 * @name ABTNodeClient#getNotifications
 * @param {ABTNodeClient.GetNotificationsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNotifications>} Checkout {@link ABTNodeClient.ResponseGetNotifications} for resolved data format
 */

/**
 * getRoutingSites
 *
 * @name ABTNodeClient#getRoutingSites
 * @param {ABTNodeClient.GetRoutingSitesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetRoutingSites>} Checkout {@link ABTNodeClient.ResponseGetRoutingSites} for resolved data format
 */

/**
 * getRoutingSnapshots
 *
 * @name ABTNodeClient#getRoutingSnapshots
 * @param {ABTNodeClient.GetRoutingSnapshotsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetRoutingSnapshots>} Checkout {@link ABTNodeClient.ResponseGetRoutingSnapshots} for resolved data format
 */

/**
 * getSnapshotSites
 *
 * @name ABTNodeClient#getSnapshotSites
 * @param {ABTNodeClient.GetSnapshotSitesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetSnapshotSites>} Checkout {@link ABTNodeClient.ResponseGetSnapshotSites} for resolved data format
 */

/**
 * getRoutingProviders
 *
 * @name ABTNodeClient#getRoutingProviders
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetRoutingProviders>} Checkout {@link ABTNodeClient.ResponseGetRoutingProviders} for resolved data format
 */

/**
 * getCertificates
 *
 * @name ABTNodeClient#getCertificates
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetCertificates>} Checkout {@link ABTNodeClient.ResponseGetCertificates} for resolved data format
 */

/**
 * checkDomains
 *
 * @name ABTNodeClient#checkDomains
 * @param {ABTNodeClient.CheckDomainsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCheckDomains>} Checkout {@link ABTNodeClient.ResponseCheckDomains} for resolved data format
 */

/**
 * findCertificateByDomain
 *
 * @name ABTNodeClient#findCertificateByDomain
 * @param {ABTNodeClient.FindCertificateByDomainParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseFindCertificateByDomain>} Checkout {@link ABTNodeClient.ResponseFindCertificateByDomain} for resolved data format
 */

/**
 * getAccessKeys
 *
 * @name ABTNodeClient#getAccessKeys
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseAccessKeys>} Checkout {@link ABTNodeClient.ResponseAccessKeys} for resolved data format
 */

/**
 * getWebHooks
 *
 * @name ABTNodeClient#getWebHooks
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseWebHooks>} Checkout {@link ABTNodeClient.ResponseWebHooks} for resolved data format
 */

/**
 * getWebhookSenders
 *
 * @name ABTNodeClient#getWebhookSenders
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseSenderList>} Checkout {@link ABTNodeClient.ResponseSenderList} for resolved data format
 */

/**
 * sendTestMessage
 *
 * @name ABTNodeClient#sendTestMessage
 * @param {ABTNodeClient.SendTestMessageParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseSendMsg>} Checkout {@link ABTNodeClient.ResponseSendMsg} for resolved data format
 */

/**
 * getSession
 *
 * @name ABTNodeClient#getSession
 * @param {ABTNodeClient.GetSessionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetSession>} Checkout {@link ABTNodeClient.ResponseGetSession} for resolved data format
 */

/**
 * getRoles
 *
 * @name ABTNodeClient#getRoles
 * @param {ABTNodeClient.GetRolesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoles>} Checkout {@link ABTNodeClient.ResponseRoles} for resolved data format
 */

/**
 * getPermissions
 *
 * @name ABTNodeClient#getPermissions
 * @param {ABTNodeClient.GetPermissionsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponsePermissions>} Checkout {@link ABTNodeClient.ResponsePermissions} for resolved data format
 */

/**
 * getInvitations
 *
 * @name ABTNodeClient#getInvitations
 * @param {ABTNodeClient.GetInvitationsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetInvitations>} Checkout {@link ABTNodeClient.ResponseGetInvitations} for resolved data format
 */

/**
 * getUsers
 *
 * @name ABTNodeClient#getUsers
 * @param {ABTNodeClient.GetUsersParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUsers>} Checkout {@link ABTNodeClient.ResponseUsers} for resolved data format
 */

/**
 * getUser
 *
 * @name ABTNodeClient#getUser
 * @param {ABTNodeClient.GetUserParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * getUsersCountPerRole
 *
 * @name ABTNodeClient#getUsersCountPerRole
 * @param {ABTNodeClient.GetUsersCountPerRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetUsersCountPerRole>} Checkout {@link ABTNodeClient.ResponseGetUsersCountPerRole} for resolved data format
 */

/**
 * getOwner
 *
 * @name ABTNodeClient#getOwner
 * @param {ABTNodeClient.GetOwnerParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * getPermissionsByRole
 *
 * @name ABTNodeClient#getPermissionsByRole
 * @param {ABTNodeClient.GetPermissionsByRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponsePermissions>} Checkout {@link ABTNodeClient.ResponsePermissions} for resolved data format
 */

/**
 * getPassportIssuances
 *
 * @name ABTNodeClient#getPassportIssuances
 * @param {ABTNodeClient.GetPassportIssuancesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetPassportIssuances>} Checkout {@link ABTNodeClient.ResponseGetPassportIssuances} for resolved data format
 */

/**
 * getAuditLogs
 *
 * @name ABTNodeClient#getAuditLogs
 * @param {ABTNodeClient.GetAuditLogsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetAuditLogs>} Checkout {@link ABTNodeClient.ResponseGetAuditLogs} for resolved data format
 */

/**
 * installBlocklet
 *
 * @name ABTNodeClient#installBlocklet
 * @param {ABTNodeClient.InstallBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * installBlockletFromVc
 *
 * @name ABTNodeClient#installBlockletFromVc
 * @param {ABTNodeClient.InstallBlockletFromVcParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseInstallFromVc>} Checkout {@link ABTNodeClient.ResponseInstallFromVc} for resolved data format
 */

/**
 * installComponent
 *
 * @name ABTNodeClient#installComponent
 * @param {ABTNodeClient.InstallComponentParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * startBlocklet
 *
 * @name ABTNodeClient#startBlocklet
 * @param {ABTNodeClient.StartBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * stopBlocklet
 *
 * @name ABTNodeClient#stopBlocklet
 * @param {ABTNodeClient.StopBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * reloadBlocklet
 *
 * @name ABTNodeClient#reloadBlocklet
 * @param {ABTNodeClient.ReloadBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * restartBlocklet
 *
 * @name ABTNodeClient#restartBlocklet
 * @param {ABTNodeClient.RestartBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * deleteBlocklet
 *
 * @name ABTNodeClient#deleteBlocklet
 * @param {ABTNodeClient.DeleteBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * deleteComponent
 *
 * @name ABTNodeClient#deleteComponent
 * @param {ABTNodeClient.DeleteComponentParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * cancelDownloadBlocklet
 *
 * @name ABTNodeClient#cancelDownloadBlocklet
 * @param {ABTNodeClient.CancelDownloadBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * upgradeBlocklet
 *
 * @name ABTNodeClient#upgradeBlocklet
 * @param {ABTNodeClient.UpgradeBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * checkComponentsForUpdates
 *
 * @name ABTNodeClient#checkComponentsForUpdates
 * @param {ABTNodeClient.CheckComponentsForUpdatesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCheckComponentsForUpdates>} Checkout {@link ABTNodeClient.ResponseCheckComponentsForUpdates} for resolved data format
 */

/**
 * upgradeComponents
 *
 * @name ABTNodeClient#upgradeComponents
 * @param {ABTNodeClient.UpgradeComponentsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * configBlocklet
 *
 * @name ABTNodeClient#configBlocklet
 * @param {ABTNodeClient.ConfigBlockletParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * configPublicToStore
 *
 * @name ABTNodeClient#configPublicToStore
 * @param {ABTNodeClient.ConfigPublicToStoreParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * configNavigations
 *
 * @name ABTNodeClient#configNavigations
 * @param {ABTNodeClient.ConfigNavigationsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * updateWhoCanAccess
 *
 * @name ABTNodeClient#updateWhoCanAccess
 * @param {ABTNodeClient.UpdateWhoCanAccessParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * updateComponentTitle
 *
 * @name ABTNodeClient#updateComponentTitle
 * @param {ABTNodeClient.UpdateComponentTitleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * updateComponentMountPoint
 *
 * @name ABTNodeClient#updateComponentMountPoint
 * @param {ABTNodeClient.UpdateComponentMountPointParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseBlocklet>} Checkout {@link ABTNodeClient.ResponseBlocklet} for resolved data format
 */

/**
 * backupToSpaces
 *
 * @name ABTNodeClient#backupToSpaces
 * @param {ABTNodeClient.BackupToSpacesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * restoreFromSpaces
 *
 * @name ABTNodeClient#restoreFromSpaces
 * @param {ABTNodeClient.RestoreFromSpacesParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * updateNodeInfo
 *
 * @name ABTNodeClient#updateNodeInfo
 * @param {ABTNodeClient.UpdateNodeInfoParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNodeInfo>} Checkout {@link ABTNodeClient.ResponseGetNodeInfo} for resolved data format
 */

/**
 * updateNodeRouting
 *
 * @name ABTNodeClient#updateNodeRouting
 * @param {ABTNodeClient.UpdateNodeRoutingParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetNodeInfo>} Checkout {@link ABTNodeClient.ResponseGetNodeInfo} for resolved data format
 */

/**
 * upgradeNodeVersion
 *
 * @name ABTNodeClient#upgradeNodeVersion
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUpgradeNodeVersion>} Checkout {@link ABTNodeClient.ResponseUpgradeNodeVersion} for resolved data format
 */

/**
 * restartServer
 *
 * @name ABTNodeClient#restartServer
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRestartServer>} Checkout {@link ABTNodeClient.ResponseRestartServer} for resolved data format
 */

/**
 * resetNode
 *
 * @name ABTNodeClient#resetNode
 * @param {ABTNodeClient.ResetNodeParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseResetNode>} Checkout {@link ABTNodeClient.ResponseResetNode} for resolved data format
 */

/**
 * updateGateway
 *
 * @name ABTNodeClient#updateGateway
 * @param {ABTNodeClient.UpdateGatewayParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGateway>} Checkout {@link ABTNodeClient.ResponseGateway} for resolved data format
 */

/**
 * createMemberInvitation
 *
 * @name ABTNodeClient#createMemberInvitation
 * @param {ABTNodeClient.CreateMemberInvitationParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCreateInvitation>} Checkout {@link ABTNodeClient.ResponseCreateInvitation} for resolved data format
 */

/**
 * createTransferInvitation
 *
 * @name ABTNodeClient#createTransferInvitation
 * @param {ABTNodeClient.CreateTransferInvitationParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCreateTransferNodeInvitation>} Checkout {@link ABTNodeClient.ResponseCreateTransferNodeInvitation} for resolved data format
 */

/**
 * deleteInvitation
 *
 * @name ABTNodeClient#deleteInvitation
 * @param {ABTNodeClient.DeleteInvitationParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * createPassportIssuance
 *
 * @name ABTNodeClient#createPassportIssuance
 * @param {ABTNodeClient.CreatePassportIssuanceParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCreatePassportIssuance>} Checkout {@link ABTNodeClient.ResponseCreatePassportIssuance} for resolved data format
 */

/**
 * deletePassportIssuance
 *
 * @name ABTNodeClient#deletePassportIssuance
 * @param {ABTNodeClient.DeletePassportIssuanceParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * configTrustedPassports
 *
 * @name ABTNodeClient#configTrustedPassports
 * @param {ABTNodeClient.ConfigTrustedPassportsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * configPassportIssuance
 *
 * @name ABTNodeClient#configPassportIssuance
 * @param {ABTNodeClient.ConfigPassportIssuanceParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * removeUser
 *
 * @name ABTNodeClient#removeUser
 * @param {ABTNodeClient.RemoveUserParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * updateUserApproval
 *
 * @name ABTNodeClient#updateUserApproval
 * @param {ABTNodeClient.UpdateUserApprovalParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * updateUserRole
 *
 * @name ABTNodeClient#updateUserRole
 * @param {ABTNodeClient.UpdateUserRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * issuePassportToUser
 *
 * @name ABTNodeClient#issuePassportToUser
 * @param {ABTNodeClient.IssuePassportToUserParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * revokeUserPassport
 *
 * @name ABTNodeClient#revokeUserPassport
 * @param {ABTNodeClient.RevokeUserPassportParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * enableUserPassport
 *
 * @name ABTNodeClient#enableUserPassport
 * @param {ABTNodeClient.EnableUserPassportParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUser>} Checkout {@link ABTNodeClient.ResponseUser} for resolved data format
 */

/**
 * createRole
 *
 * @name ABTNodeClient#createRole
 * @param {ABTNodeClient.CreateRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRole>} Checkout {@link ABTNodeClient.ResponseRole} for resolved data format
 */

/**
 * updateRole
 *
 * @name ABTNodeClient#updateRole
 * @param {ABTNodeClient.UpdateRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRole>} Checkout {@link ABTNodeClient.ResponseRole} for resolved data format
 */

/**
 * deleteRole
 *
 * @name ABTNodeClient#deleteRole
 * @param {ABTNodeClient.DeleteRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * createPermission
 *
 * @name ABTNodeClient#createPermission
 * @param {ABTNodeClient.CreatePermissionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponsePermission>} Checkout {@link ABTNodeClient.ResponsePermission} for resolved data format
 */

/**
 * updatePermission
 *
 * @name ABTNodeClient#updatePermission
 * @param {ABTNodeClient.UpdatePermissionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponsePermission>} Checkout {@link ABTNodeClient.ResponsePermission} for resolved data format
 */

/**
 * deletePermission
 *
 * @name ABTNodeClient#deletePermission
 * @param {ABTNodeClient.DeletePermissionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * grantPermissionForRole
 *
 * @name ABTNodeClient#grantPermissionForRole
 * @param {ABTNodeClient.GrantPermissionForRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * revokePermissionFromRole
 *
 * @name ABTNodeClient#revokePermissionFromRole
 * @param {ABTNodeClient.RevokePermissionFromRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * updatePermissionsForRole
 *
 * @name ABTNodeClient#updatePermissionsForRole
 * @param {ABTNodeClient.UpdatePermissionsForRoleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRole>} Checkout {@link ABTNodeClient.ResponseRole} for resolved data format
 */

/**
 * hasPermission
 *
 * @name ABTNodeClient#hasPermission
 * @param {ABTNodeClient.HasPermissionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.BooleanResponse>} Checkout {@link ABTNodeClient.BooleanResponse} for resolved data format
 */

/**
 * addBlockletStore
 *
 * @name ABTNodeClient#addBlockletStore
 * @param {ABTNodeClient.AddBlockletStoreParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * deleteBlockletStore
 *
 * @name ABTNodeClient#deleteBlockletStore
 * @param {ABTNodeClient.DeleteBlockletStoreParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * readNotifications
 *
 * @name ABTNodeClient#readNotifications
 * @param {ABTNodeClient.ReadNotificationsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseReadNotifications>} Checkout {@link ABTNodeClient.ResponseReadNotifications} for resolved data format
 */

/**
 * unreadNotifications
 *
 * @name ABTNodeClient#unreadNotifications
 * @param {ABTNodeClient.UnreadNotificationsParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseReadNotifications>} Checkout {@link ABTNodeClient.ResponseReadNotifications} for resolved data format
 */

/**
 * addRoutingSite
 *
 * @name ABTNodeClient#addRoutingSite
 * @param {ABTNodeClient.AddRoutingSiteParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * addDomainAlias
 *
 * @name ABTNodeClient#addDomainAlias
 * @param {ABTNodeClient.AddDomainAliasParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * deleteDomainAlias
 *
 * @name ABTNodeClient#deleteDomainAlias
 * @param {ABTNodeClient.DeleteDomainAliasParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * deleteRoutingSite
 *
 * @name ABTNodeClient#deleteRoutingSite
 * @param {ABTNodeClient.DeleteRoutingSiteParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.GeneralResponse>} Checkout {@link ABTNodeClient.GeneralResponse} for resolved data format
 */

/**
 * updateRoutingSite
 *
 * @name ABTNodeClient#updateRoutingSite
 * @param {ABTNodeClient.UpdateRoutingSiteParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * addRoutingRule
 *
 * @name ABTNodeClient#addRoutingRule
 * @param {ABTNodeClient.AddRoutingRuleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * updateRoutingRule
 *
 * @name ABTNodeClient#updateRoutingRule
 * @param {ABTNodeClient.UpdateRoutingRuleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * deleteRoutingRule
 *
 * @name ABTNodeClient#deleteRoutingRule
 * @param {ABTNodeClient.DeleteRoutingRuleParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseRoutingSite>} Checkout {@link ABTNodeClient.ResponseRoutingSite} for resolved data format
 */

/**
 * takeRoutingSnapshot
 *
 * @name ABTNodeClient#takeRoutingSnapshot
 * @param {ABTNodeClient.TakeRoutingSnapshotParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseTakeRoutingSnapshot>} Checkout {@link ABTNodeClient.ResponseTakeRoutingSnapshot} for resolved data format
 */

/**
 * updateCertificate
 *
 * @name ABTNodeClient#updateCertificate
 * @param {ABTNodeClient.UpdateCertificateParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUpdateNginxHttpsCert>} Checkout {@link ABTNodeClient.ResponseUpdateNginxHttpsCert} for resolved data format
 */

/**
 * addCertificate
 *
 * @name ABTNodeClient#addCertificate
 * @param {ABTNodeClient.AddCertificateParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseAddNginxHttpsCert>} Checkout {@link ABTNodeClient.ResponseAddNginxHttpsCert} for resolved data format
 */

/**
 * deleteCertificate
 *
 * @name ABTNodeClient#deleteCertificate
 * @param {ABTNodeClient.DeleteCertificateParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseDeleteNginxHttpsCert>} Checkout {@link ABTNodeClient.ResponseDeleteNginxHttpsCert} for resolved data format
 */

/**
 * issueLetsEncryptCert
 *
 * @name ABTNodeClient#issueLetsEncryptCert
 * @param {ABTNodeClient.IssueLetsEncryptCertParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseAddLetsEncryptCert>} Checkout {@link ABTNodeClient.ResponseAddLetsEncryptCert} for resolved data format
 */

/**
 * createAccessKey
 *
 * @name ABTNodeClient#createAccessKey
 * @param {ABTNodeClient.CreateAccessKeyParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCreateAccessKey>} Checkout {@link ABTNodeClient.ResponseCreateAccessKey} for resolved data format
 */

/**
 * updateAccessKey
 *
 * @name ABTNodeClient#updateAccessKey
 * @param {ABTNodeClient.UpdateAccessKeyParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseUpdateAccessKey>} Checkout {@link ABTNodeClient.ResponseUpdateAccessKey} for resolved data format
 */

/**
 * deleteAccessKey
 *
 * @name ABTNodeClient#deleteAccessKey
 * @param {ABTNodeClient.DeleteAccessKeyParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseDeleteAccessKey>} Checkout {@link ABTNodeClient.ResponseDeleteAccessKey} for resolved data format
 */

/**
 * createWebHook
 *
 * @name ABTNodeClient#createWebHook
 * @param {ABTNodeClient.CreateWebHookParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseCreateWebHook>} Checkout {@link ABTNodeClient.ResponseCreateWebHook} for resolved data format
 */

/**
 * deleteWebHook
 *
 * @name ABTNodeClient#deleteWebHook
 * @param {ABTNodeClient.DeleteWebHookParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseDeleteWebHook>} Checkout {@link ABTNodeClient.ResponseDeleteWebHook} for resolved data format
 */

/**
 * startSession
 *
 * @name ABTNodeClient#startSession
 * @param {ABTNodeClient.StartSessionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetSession>} Checkout {@link ABTNodeClient.ResponseGetSession} for resolved data format
 */

/**
 * updateSession
 *
 * @name ABTNodeClient#updateSession
 * @param {ABTNodeClient.UpdateSessionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetSession>} Checkout {@link ABTNodeClient.ResponseGetSession} for resolved data format
 */

/**
 * endSession
 *
 * @name ABTNodeClient#endSession
 * @param {ABTNodeClient.EndSessionParams} params
 * @function
 * @memberof ABTNodeClient
 * @returns {Promise<ABTNodeClient.ResponseGetSession>} Checkout {@link ABTNodeClient.ResponseGetSession} for resolved data format
 */
"use strict";
//# sourceMappingURL=types.js.map