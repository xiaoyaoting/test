{"version":3,"file":"node.js","names":["EventEmitter","require","fromSecretKey","ABTNodeClient","NativeABTNodeClient","constructor","httpEndpoint","userAgent","_accessKeyId","_accessKeySecret","_type","setAuthAccessKey","accessKeyId","accessKeySecret","type","validateAccessKey","_getAuthHeaders","headers","wallet","timestamp","Date","now","sign","_getSocketOptions","_getEventImplementation","isSameAddr","addr1","addr2","String","toLowerCase","match","address","Error","signWithAccessKey","message","module","exports"],"sources":["../src/node.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nconst EventEmitter = require('events');\nconst { fromSecretKey } = require('@ocap/wallet');\n\nconst ABTNodeClient = require('./base');\n\nclass NativeABTNodeClient extends ABTNodeClient {\n  constructor(httpEndpoint, userAgent) {\n    super(httpEndpoint, userAgent);\n\n    this._accessKeyId = null;\n    this._accessKeySecret = null;\n\n    // wallet type\n    this._type = null;\n  }\n\n  setAuthAccessKey({ accessKeyId, accessKeySecret, type }) {\n    NativeABTNodeClient.validateAccessKey({\n      accessKeyId,\n      accessKeySecret,\n      type,\n    });\n\n    this._accessKeyId = accessKeyId;\n    this._accessKeySecret = accessKeySecret;\n    this._type = type;\n  }\n\n  _getAuthHeaders() {\n    const headers = super._getAuthHeaders();\n    if (this._accessKeyId && this._accessKeySecret) {\n      const wallet = fromSecretKey(this._accessKeySecret, this._type);\n      const timestamp = Date.now();\n      headers['x-access-key-id'] = this._accessKeyId;\n      headers['x-access-stamp'] = timestamp;\n      headers['x-access-signature'] = wallet.sign(`${timestamp}-${this._accessKeyId}`);\n    }\n\n    return headers;\n  }\n\n  _getSocketOptions() {\n    return {};\n  }\n\n  _getEventImplementation() {\n    return EventEmitter;\n  }\n}\n\nNativeABTNodeClient.validateAccessKey = ({ accessKeyId, accessKeySecret, type }) => {\n  const wallet = fromSecretKey(accessKeySecret, type);\n  const isSameAddr = (addr1, addr2) => String(addr1).toLowerCase() === String(addr2).toLowerCase();\n  const match = isSameAddr(accessKeyId, wallet.address);\n  if (!match) {\n    throw new Error('accessKeyId and accessKeySecret does not match');\n  }\n};\n\nNativeABTNodeClient.signWithAccessKey = ({ accessKeyId, accessKeySecret, message, type }) => {\n  NativeABTNodeClient.validateAccessKey({ accessKeyId, accessKeySecret });\n  const wallet = fromSecretKey(accessKeySecret, type);\n  return wallet.sign(message);\n};\n\nmodule.exports = NativeABTNodeClient;\n"],"mappings":";;AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEjD,MAAME,aAAa,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAEvC,MAAMG,mBAAmB,SAASD,aAAa,CAAC;EAC9CE,WAAW,CAACC,YAAY,EAAEC,SAAS,EAAE;IACnC,KAAK,CAACD,YAAY,EAAEC,SAAS,CAAC;IAE9B,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;IACA,IAAI,CAACC,KAAK,GAAG,IAAI;EACnB;EAEAC,gBAAgB,OAAyC;IAAA,IAAxC;MAAEC,WAAW;MAAEC,eAAe;MAAEC;IAAK,CAAC;IACrDV,mBAAmB,CAACW,iBAAiB,CAAC;MACpCH,WAAW;MACXC,eAAe;MACfC;IACF,CAAC,CAAC;IAEF,IAAI,CAACN,YAAY,GAAGI,WAAW;IAC/B,IAAI,CAACH,gBAAgB,GAAGI,eAAe;IACvC,IAAI,CAACH,KAAK,GAAGI,IAAI;EACnB;EAEAE,eAAe,GAAG;IAChB,MAAMC,OAAO,GAAG,KAAK,CAACD,eAAe,EAAE;IACvC,IAAI,IAAI,CAACR,YAAY,IAAI,IAAI,CAACC,gBAAgB,EAAE;MAC9C,MAAMS,MAAM,GAAGhB,aAAa,CAAC,IAAI,CAACO,gBAAgB,EAAE,IAAI,CAACC,KAAK,CAAC;MAC/D,MAAMS,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;MAC5BJ,OAAO,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAACT,YAAY;MAC9CS,OAAO,CAAC,gBAAgB,CAAC,GAAGE,SAAS;MACrCF,OAAO,CAAC,oBAAoB,CAAC,GAAGC,MAAM,CAACI,IAAI,WAAIH,SAAS,cAAI,IAAI,CAACX,YAAY,EAAG;IAClF;IAEA,OAAOS,OAAO;EAChB;EAEAM,iBAAiB,GAAG;IAClB,OAAO,CAAC,CAAC;EACX;EAEAC,uBAAuB,GAAG;IACxB,OAAOxB,YAAY;EACrB;AACF;AAEAI,mBAAmB,CAACW,iBAAiB,GAAG,SAA4C;EAAA,IAA3C;IAAEH,WAAW;IAAEC,eAAe;IAAEC;EAAK,CAAC;EAC7E,MAAMI,MAAM,GAAGhB,aAAa,CAACW,eAAe,EAAEC,IAAI,CAAC;EACnD,MAAMW,UAAU,GAAG,CAACC,KAAK,EAAEC,KAAK,KAAKC,MAAM,CAACF,KAAK,CAAC,CAACG,WAAW,EAAE,KAAKD,MAAM,CAACD,KAAK,CAAC,CAACE,WAAW,EAAE;EAChG,MAAMC,KAAK,GAAGL,UAAU,CAACb,WAAW,EAAEM,MAAM,CAACa,OAAO,CAAC;EACrD,IAAI,CAACD,KAAK,EAAE;IACV,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF,CAAC;AAED5B,mBAAmB,CAAC6B,iBAAiB,GAAG,SAAqD;EAAA,IAApD;IAAErB,WAAW;IAAEC,eAAe;IAAEqB,OAAO;IAAEpB;EAAK,CAAC;EACtFV,mBAAmB,CAACW,iBAAiB,CAAC;IAAEH,WAAW;IAAEC;EAAgB,CAAC,CAAC;EACvE,MAAMK,MAAM,GAAGhB,aAAa,CAACW,eAAe,EAAEC,IAAI,CAAC;EACnD,OAAOI,MAAM,CAACI,IAAI,CAACY,OAAO,CAAC;AAC7B,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGhC,mBAAmB"}