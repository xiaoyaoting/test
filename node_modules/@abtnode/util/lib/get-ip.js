const internalIp = require('internal-ip');
const externalIp = require('public-ip');

const isEC2 = require('./is-ec2');
const getEc2Meta = require('./get-ec2-meta');
const tryWithTimeout = require('./try-with-timeout');

const getExternalIp = async ({ v6 = false, timeout = 5000 } = {}) => {
  try {
    const ip = await tryWithTimeout(v6 ? externalIp.v6 : externalIp.v4, timeout);
    return ip;
  } catch (err) {
    return '';
  }
};

const getIP = async ({ includeV6 = false, timeout = 5000, includeExternal = true } = {}) => {
  try {
    if (await isEC2()) {
      const [internal, external, internalV6, externalV6] = await Promise.all([
        getEc2Meta('local-ipv4', timeout),
        includeExternal ? getEc2Meta('public-ipv4', timeout) : '',
        includeV6 ? getEc2Meta('local-ipv6', timeout) : '',
        includeV6 && includeExternal ? getEc2Meta('public-ipv6', timeout) : '',
      ]);
      return { internal, external, internalV6, externalV6 };
    }

    const [internal, external, internalV6, externalV6] = await Promise.all([
      internalIp.v4(),
      includeExternal ? getExternalIp({ timeout }) : '',
      includeV6 ? internalIp.v6() : '',
      includeV6 && includeExternal ? getExternalIp({ v6: true, timeout }) : '',
    ]);
    return { internal, external, internalV6, externalV6 };
  } catch (err) {
    return {};
  }
};

module.exports = getIP;
