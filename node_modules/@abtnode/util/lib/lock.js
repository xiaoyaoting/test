const { EventEmitter } = require('events');

module.exports = class Lock {
  constructor(name) {
    this.name = name;
    this.locked = false;
    this.events = new EventEmitter();
  }

  acquire() {
    return new Promise((resolve) => {
      // If somebody has the lock, wait until he/she releases the lock and try again
      if (this.locked) {
        const tryAcquire = () => {
          if (!this.locked) {
            this.locked = true;
            this.events.removeListener('release', tryAcquire);
            resolve();
          }
        };

        this.events.on('release', tryAcquire);
      } else {
        // Otherwise, take the lock and resolve immediately
        this.locked = true;
        resolve();
      }
    });
  }

  release() {
    // Release the lock immediately
    this.locked = false;
    setImmediate(() => this.events.emit('release'));
  }
};
