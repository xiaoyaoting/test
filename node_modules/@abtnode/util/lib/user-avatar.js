const path = require('path');
const fs = require('fs-extra');

const { USER_AVATAR_DIR, USER_AVATAR_URL_PREFIX } = require('@abtnode/constant');

const md5 = require('./md5');

const getAvatarFile = (dataDir, fileName) =>
  path.join(dataDir, USER_AVATAR_DIR, fileName.substring(0, 2), fileName.substring(2));

/**
 * save base64 avatar data to storage and return url
 */
const extractUserAvatar = async (avatar, { dataDir } = {}) => {
  if (!avatar) {
    return avatar;
  }

  const regex = /^data:image\/(\w+);base64,/;
  const match = regex.exec(avatar);

  if (!match) {
    return avatar;
  }

  const fileData = Buffer.from(avatar.replace(regex, ''), 'base64');
  const fileName = `${md5(fileData)}.${match[1]}`;

  const avatarFile = getAvatarFile(dataDir, fileName);
  await fs.outputFile(avatarFile, fileData);

  const url = `${USER_AVATAR_URL_PREFIX}/${fileName}`;

  return url;
};

/**
 * generate base64 avatar data to from file by url
 */
const parseUserAvatar = async (avatar, { dataDir } = {}) => {
  if (!avatar) {
    return avatar;
  }

  if (!avatar.startsWith(USER_AVATAR_URL_PREFIX)) {
    return avatar;
  }

  const fileName = avatar.split('/').slice(-1)[0];

  const avatarFile = getAvatarFile(dataDir, fileName);

  if (!fs.existsSync(avatarFile)) {
    return avatar;
  }

  const buf = await fs.promises.readFile(avatarFile);
  const extname = path.extname(fileName).substring(1);

  const data = `data:image/${extname};base64,${buf.toString('base64')}`;

  return data;
};

module.exports = {
  extractUserAvatar,
  parseUserAvatar,
  getAvatarFile,
};
