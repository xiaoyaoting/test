{"version":3,"file":"index.js","names":["fetch","require","set","get","parse","print","getQueryBuilders","getMutationBuilders","getSubscriptionBuilders","debug","BaseClient","constructor","config","dataSource","Error","httpBaseUrl","socketBaseUrl","Object","assign","httpEndpoint","ds","socketEndpoint","enableQuery","enableSubscription","enableMutation","accessKey","accessSecret","maxQueryDepth","schema","_getSchema","generateQueryFns","generateSubscriptionFns","subscriptions","generateMutationFns","getQueries","_getApiList","getSubscriptions","getMutations","doRawQuery","query","requestOptions","dataKey","cleanQuery","_doRequest","err","message","toString","doBatchQuery","queries","methods","keys","length","forEach","x","type","documents","map","args","builder","base","shift","variableDefinitions","directives","selections","concat","types","queryType","builders","rootName","name","ignoreFields","_getIgnoreFields","bind","maxDepth","key","queryFn","_sanitizeArgs","result","pagedResult","_getPagedResults","queryBuilder","subscriptionType","subscriptionFn","doRawSubscription","queryId","_getQueryId","Promise","resolve","emitter","channel","_ensureSubscriptionChannel","reject","push","receive","res","EventEmitter","_getEventImplementation","subscriptionId","mutationType","mutationFn","options","authHeaders","_getAuthHeaders","headers","payload","_getExtraPayload","method","body","JSON","stringify","credentials","status","json","errors","Array","isArray","join","data","isJoined","Socket","_getSocketImplementation","socket","_getSocketOptions","connect","onMessage","event","find","emit","onConnError","setTimeout","filter","prefix","_attachNextFn","prefixStr","Boolean","argPrefixStr","replace","page","next","cursor","pagingArgs","paging","newArgs","newResult","module","exports"],"sources":["../src/index.js"],"sourcesContent":["const fetch = require('cross-fetch');\nconst set = require('lodash.set');\nconst get = require('lodash.get');\nconst { parse } = require('graphql/language/parser');\nconst { print } = require('graphql/language/printer');\nconst { getQueryBuilders, getMutationBuilders, getSubscriptionBuilders } = require('./util');\n\nconst debug = require('debug')('BaseClient');\n\nclass BaseClient {\n  constructor(config) {\n    if (!config.dataSource) {\n      throw new Error('BaseClient requires dataSource config');\n    }\n\n    if (config.httpBaseUrl) {\n      throw Error('config.httpBaseUrl is deprecated');\n    }\n    if (config.socketBaseUrl) {\n      throw Error('config.socketBaseUrl is deprecated');\n    }\n\n    this.config = Object.assign(\n      {\n        httpEndpoint: ds => `https://ocap.arcblock.io/api/${ds}`,\n        socketEndpoint: ds => `wss://ocap.arcblock.io/api/${ds}/socket`,\n        enableQuery: true,\n        enableSubscription: true,\n        enableMutation: true,\n        accessKey: '',\n        accessSecret: '',\n        maxQueryDepth: 4,\n      },\n      config\n    );\n\n    this.schema = this._getSchema(this.config.dataSource);\n    if (!this.schema) {\n      throw new Error(`BaseClient: unsupported dataSource ${this.config.dataSource}`);\n    }\n\n    if (this.config.enableQuery) {\n      this.generateQueryFns(this.schema);\n    }\n\n    if (this.config.enableSubscription) {\n      this.generateSubscriptionFns(this.schema);\n      this.subscriptions = {}; // event emitter objects\n    }\n\n    if (this.config.enableMutation) {\n      this.generateMutationFns(this.schema);\n    }\n  }\n\n  getQueries() {\n    return this._getApiList('query');\n  }\n\n  getSubscriptions() {\n    return this._getApiList('subscription');\n  }\n\n  getMutations() {\n    return this._getApiList('mutation');\n  }\n\n  /**\n   * Send raw query to ocap and return results\n   *\n   * @param {*} query\n   * @memberof BaseClient\n   * @return Promise\n   */\n  doRawQuery(query, requestOptions = {}, dataKey) {\n    try {\n      const cleanQuery = print(parse(query));\n      return this._doRequest(cleanQuery, requestOptions, dataKey);\n    } catch (err) {\n      throw new Error(`BaseClient: invalid raw query ${err.message || err.toString()}`);\n    }\n  }\n\n  /**\n   * Do multiple queries in a single http request\n   *\n   * @param {Object} queries - use method as key and arguments as value\n   * @param {Object} requestOptions\n   * @memberof BaseClient\n   */\n  doBatchQuery(queries, requestOptions) {\n    const methods = Object.keys(queries);\n    if (methods.length === 0) {\n      throw new Error('doBatchQuery requires at least one query');\n    }\n\n    methods.forEach(x => {\n      if (typeof this[x] !== 'function') {\n        throw new Error(`doBatchQuery got invalid query method ${x}`);\n      }\n      if (this[x].type !== 'query') {\n        throw new Error(`doBatchQuery got none query method ${x}`);\n      }\n    });\n\n    const documents = methods.map(x => {\n      const args = queries[x] || {};\n      const query = typeof args === 'string' ? args : this[x].builder(args, requestOptions);\n      return parse(query);\n    });\n\n    const base = documents.shift();\n\n    let variableDefinitions = get(base, 'definitions[0].variableDefinitions');\n    let directives = get(base, 'definitions[0].directives');\n    let selections = get(base, 'definitions[0].selectionSet.selections');\n\n    documents.forEach(x => {\n      variableDefinitions = variableDefinitions.concat(\n        get(x, 'definitions[0].variableDefinitions', [])\n      );\n      directives = directives.concat(get(x, 'definitions[0].directives', []));\n      selections = selections.concat(get(x, 'definitions[0].selectionSet.selections', []));\n    });\n\n    set(base, 'definitions[0].variableDefinitions', variableDefinitions);\n    set(base, 'definitions[0].directives', directives);\n    set(base, 'definitions[0].selectionSet.selections', selections);\n\n    return this._doRequest(print(base), requestOptions);\n  }\n\n  generateQueryFns() {\n    const { types, queryType } = this.schema;\n    if (!queryType) {\n      return;\n    }\n\n    const builders = getQueryBuilders({\n      types,\n      rootName: queryType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const queryFn = async (args, requestOptions = {}) => {\n        const query = builders[key](this._sanitizeArgs(args), (requestOptions || {}).ignoreFields);\n        const result = await this._doRequest(query, requestOptions, key);\n        const pagedResult = this._getPagedResults({\n          result,\n          queryBuilder: builders[key],\n          args,\n          dataKey: key,\n          requestOptions,\n        });\n\n        return pagedResult;\n      };\n\n      queryFn.type = 'query';\n      queryFn.args = builders[key].args;\n      queryFn.builder = builders[key];\n\n      this[key] = queryFn;\n    });\n  }\n\n  generateSubscriptionFns() {\n    const { types, subscriptionType } = this.schema;\n    if (!subscriptionType) {\n      return;\n    }\n\n    const builders = getSubscriptionBuilders({\n      types,\n      rootName: subscriptionType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const subscriptionFn = async args => {\n        const query = builders[key](this._sanitizeArgs(args));\n        return this.doRawSubscription(query);\n      };\n\n      subscriptionFn.type = 'subscription';\n      subscriptionFn.args = builders[key].args;\n      subscriptionFn.builder = builders[key];\n\n      this[key] = subscriptionFn;\n    });\n  }\n\n  async doRawSubscription(query) {\n    debug('doSubscription.query', query);\n    const queryId = this._getQueryId(query);\n    if (this.subscriptions[queryId]) {\n      return Promise.resolve(this.subscriptions[queryId].emitter);\n    }\n\n    const channel = await this._ensureSubscriptionChannel();\n    return new Promise((resolve, reject) => {\n      channel\n        .push('doc', { query })\n        .receive('ok', res => {\n          debug('subscription success', { queryId, res });\n\n          // create a new EventEmitter for each subscription\n          const EventEmitter = this._getEventImplementation();\n          this.subscriptions[queryId] = new EventEmitter();\n          this.subscriptions[queryId].subscriptionId = res.subscriptionId;\n\n          resolve(this.subscriptions[queryId]);\n        })\n        .receive('error', err => {\n          debug('subscription error', err);\n          reject(err);\n        });\n    });\n  }\n\n  generateMutationFns() {\n    const { types, mutationType } = this.schema;\n    if (!mutationType) {\n      return;\n    }\n\n    const builders = getMutationBuilders({\n      types,\n      rootName: mutationType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const mutationFn = async (args, requestOptions = {}) => {\n        const query = builders[key](this._sanitizeArgs(args), (requestOptions || {}).ignoreFields);\n        return this._doRequest(query, requestOptions, key);\n      };\n\n      mutationFn.type = 'mutation';\n      mutationFn.args = builders[key].args;\n      mutationFn.builder = builders[key];\n\n      this[key] = mutationFn;\n    });\n  }\n\n  /**\n   * Send a request to ocap service\n   *\n   * @param {string} query raw graphql query string\n   * @param {object} requestOptions\n   * @param {string} dataKey which field to extract if request success\n   * @return Promise\n   * @memberof BaseClient\n   */\n  async _doRequest(query, requestOptions, dataKey) {\n    debug('doRequest.query', query);\n    const httpEndpoint =\n      typeof this.config.httpEndpoint === 'function'\n        ? this.config.httpEndpoint(this.config.dataSource)\n        : this.config.httpEndpoint;\n\n    // combine custom headers and auth headers\n    const options = requestOptions || {};\n    const authHeaders = this._getAuthHeaders(query);\n    options.headers = Object.assign({}, authHeaders || {}, options.headers || {});\n    debug('_doRequest.headers', options.headers);\n\n    // combine custom payload and graphql query\n    const payload = Object.assign(await this._getExtraPayload(query), { query });\n    const res = await fetch(httpEndpoint, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      credentials: 'same-origin',\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        options.headers\n      ),\n    });\n\n    if (res.status === 200) {\n      const json = await res.json();\n      debug('_doRequest.response', { status: res.status, errors: json.errors });\n\n      if (Array.isArray(json.errors) && json.errors.length) {\n        const err = new Error(`GraphQLError: ${json.errors.map(x => x.message).join('; ')}`);\n        err.errors = json.errors;\n        throw err;\n      }\n\n      return dataKey && json.data[dataKey] ? json.data[dataKey] : json.data;\n    }\n\n    throw new Error(`GraphQL Status Error ${res.status}`);\n  }\n\n  /**\n   * Ensure we have a open socket connection and act as switcher on message received\n   *\n   * @returns Promise\n   * @memberof BaseClient\n   */\n  async _ensureSubscriptionChannel() {\n    if (this.channel && this.channel.isJoined()) {\n      return Promise.resolve(this.channel);\n    }\n\n    const socketEndpoint =\n      typeof this.config.socketEndpoint === 'function'\n        ? this.config.socketEndpoint(this.config.dataSource)\n        : this.config.socketEndpoint;\n\n    const Socket = this._getSocketImplementation();\n    this.socket = new Socket(socketEndpoint, this._getSocketOptions());\n    this.socket.connect();\n    this.socket.onMessage(({ event, payload }) => {\n      debug('socket.onMessage', { event, payload });\n      if (event === 'subscription:data') {\n        const queryId = Object.keys(this.subscriptions).find(\n          x => this.subscriptions[x].subscriptionId === payload.subscriptionId\n        );\n        if (queryId) {\n          debug('subscription.onMessage', { queryId, subscriptionId: payload.subscriptionId });\n          this.subscriptions[queryId].emit('data', payload.result.data);\n        }\n      }\n    });\n\n    // auto reconnect on error\n    this.socket.onConnError(err => {\n      debug('socket.reconnect.onConnError', err);\n      Object.keys(this.subscriptions).forEach(queryId => {\n        this.subscriptions[queryId].emit('error', err);\n      });\n      setTimeout(() => {\n        this.socket.connect();\n      }, 1000);\n    });\n\n    this.channel = this.socket.channel('__absinthe__:control');\n    return new Promise((resolve, reject) => {\n      this.channel\n        .join()\n        .receive('ok', res => {\n          debug('Channel join success', res);\n          resolve(this.channel);\n        })\n        .receive('error', err => {\n          debug('Channel join error', err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Generate list of methods with certain type\n   *\n   * @param {*} type\n   * @returns\n   * @memberof BaseClient\n   */\n  _getApiList(type) {\n    return Object.keys(this).filter(x => typeof this[x] === 'function' && this[x].type === type);\n  }\n\n  _sanitizeArgs(args) {\n    return args;\n  }\n\n  /**\n   * Make a paginated query\n   *\n   * @param {Object} { data, queryBuilder, args, type }\n   * @returns Object with possible `next` method\n   * @memberof BaseClient\n   */\n  _getPagedResults({ result, queryBuilder, args, dataKey, prefix = '', requestOptions = {} }) {\n    this._attachNextFn({ result, queryBuilder, args, dataKey, prefix, requestOptions });\n\n    const keys = Object.keys(result);\n    keys.forEach(key => {\n      if (!result[key] || typeof result[key] !== 'object' || Array.isArray(result[key])) {\n        return false;\n      }\n\n      const prefixStr = [prefix, key].filter(Boolean).join('.');\n      const argPrefixStr = prefixStr.replace(`${dataKey}`, '').replace(/^\\./, '');\n      this._attachNextFn({\n        result: result[key],\n        queryBuilder,\n        args,\n        dataKey,\n        prefix,\n        argPrefixStr,\n        requestOptions,\n      });\n\n      // add pagination methods for nested fields\n      this._getPagedResults({\n        result: result[key],\n        queryBuilder,\n        args,\n        dataKey,\n        prefix,\n      });\n    });\n\n    return result;\n  }\n  _attachNextFn({\n    result,\n    queryBuilder,\n    args,\n    dataKey,\n    prefix = '',\n    argPrefixStr = '',\n    requestOptions = {},\n  }) {\n    if (\n      result.page &&\n      result.page.next &&\n      result.page.cursor &&\n      Array.isArray(result.data) &&\n      !result.next\n    ) {\n      const pagingArgs = {\n        paging: Object.assign({}, args.paging || {}, { cursor: result.page.cursor }),\n      };\n      const newArgs = Object.assign(\n        {},\n        args,\n        argPrefixStr ? { [argPrefixStr]: pagingArgs } : pagingArgs\n      );\n      debug(\n        '_attachNextFn',\n        JSON.stringify({ argPrefixStr, prefix, page: result.page, args, newArgs })\n      );\n\n      result.next = async () => {\n        const query = queryBuilder(newArgs);\n        const newResult = await this._doRequest(query, requestOptions, dataKey);\n        return this._getPagedResults({\n          result: newResult,\n          queryBuilder,\n          args: newArgs,\n          dataKey,\n          prefix,\n          requestOptions,\n        });\n      };\n    }\n  }\n\n  _getSchema() {\n    throw new Error('_getSchema must be implemented in sub class');\n  }\n\n  _getIgnoreFields() {\n    throw new Error('_getIgnoreFields must be implemented in sub class');\n  }\n\n  _getSocketImplementation() {\n    throw new Error('_getSocketImplementation must be implemented in sub class');\n  }\n\n  _getSocketOptions() {\n    throw new Error('_getSocketOptions must be implemented in sub class');\n  }\n\n  _getEventImplementation() {\n    throw new Error('_getEventImplementation must be implemented in sub class');\n  }\n\n  _getQueryId() {\n    throw new Error('_getQueryId must be implemented in sub class');\n  }\n\n  _getAuthHeaders() {\n    return {};\n  }\n\n  _getExtraPayload() {\n    return {};\n  }\n}\n\nmodule.exports = BaseClient;\n//# sourceMappingURL=index.js.map\n"],"mappings":"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"}