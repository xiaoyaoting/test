"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseChannel = exports.getAppPublicChannelRegex = exports.getAppPublicChannel = exports.CHANNEL_TYPE = void 0;
/* eslint-disable @typescript-eslint/indent */
const did_1 = require("@arcblock/did");
const getAppPublicChannelRegex = () => /app:(\w+):public/;
exports.getAppPublicChannelRegex = getAppPublicChannelRegex;
const getAppPublicChannel = (appDid) => `app:${appDid}:public`;
exports.getAppPublicChannel = getAppPublicChannel;
const CHANNEL_TYPE = {
    DID: 'DID',
    APP: 'APP',
};
exports.CHANNEL_TYPE = CHANNEL_TYPE;
const parseChannel = (channel) => {
    if (!channel) {
        throw new Error('Channel should not be empty');
    }
    const matchAppPublicChannel = getAppPublicChannelRegex().exec(channel);
    if (matchAppPublicChannel) {
        return {
            type: CHANNEL_TYPE.APP,
            appDid: matchAppPublicChannel[1],
        };
    }
    if ((0, did_1.isValid)(channel)) {
        return {
            type: CHANNEL_TYPE.DID,
        };
    }
    throw new Error(`Invalid channel format: ${channel}`);
};
exports.parseChannel = parseChannel;
exports.default = {
    CHANNEL_TYPE,
    getAppPublicChannel,
    getAppPublicChannelRegex,
    parseChannel,
};
