import { fixAndValidateService } from './validate';
declare const fixRequired: (data: any, dir: string) => void;
declare const fixRepository: (data: any) => void;
declare const fixFiles: (data: any) => void;
declare const fixKeywords: (data: any) => void;
declare const fixTags: (data: any) => void;
declare const formatPerson: (person: string | Record<string, any>) => string;
declare const parsePerson: (person: string) => any;
declare const fixPerson: (data: any) => any;
declare const fixInterfaces: (meta: any, removeMerged?: boolean) => any;
export { fixRequired };
export { fixRepository };
export { fixFiles };
export { fixKeywords };
export { fixPerson };
export { fixTags };
export { formatPerson };
export { parsePerson };
export { fixInterfaces };
export { fixAndValidateService as fixService };
declare const _default: {
    fixRequired: (data: any, dir: string) => void;
    fixRepository: (data: any) => void;
    fixFiles: (data: any) => void;
    fixKeywords: (data: any) => void;
    fixPerson: (data: any) => any;
    fixTags: (data: any) => void;
    formatPerson: (person: string | Record<string, any>) => string;
    parsePerson: (person: string) => any;
    fixInterfaces: (meta: any, removeMerged?: boolean) => any;
    fixService: (meta: import("./types").TBlockletMeta) => import("./types").TBlockletMeta;
};
export default _default;
