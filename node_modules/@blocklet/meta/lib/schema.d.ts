import JOI from 'joi';
declare const titleSchema: JOI.StringSchema<string>;
declare const descriptionSchema: JOI.StringSchema<string>;
declare const logoSchema: JOI.StringSchema<string>;
declare const mountPointSchema: JOI.StringSchema<string>;
declare const blockletNameSchema: JOI.StringSchema<string>;
declare const environmentNameSchema: JOI.StringSchema<string>;
declare const environmentSchema: JOI.ObjectSchema<any>;
declare const scriptsSchema: JOI.ObjectSchema<any>;
declare const serviceSchema: JOI.ObjectSchema<any>;
declare const endpointSchema: JOI.ObjectSchema<any>;
declare const interfaceSchema: JOI.ObjectSchema<any>;
declare const engineSchema: JOI.ObjectSchema<any>;
declare const personSchema: JOI.ObjectSchema<any>;
declare const distSchema: JOI.ObjectSchema<any>;
declare const statsSchema: JOI.ObjectSchema<any>;
declare const componentSchema: JOI.ObjectSchema<any>;
declare const signatureSchema: JOI.ObjectSchema<any>;
declare const navigationItemSchema: JOI.ObjectSchema<any>;
declare const navigationSchema: JOI.ArraySchema<any[]>;
declare const themeSchema: JOI.ObjectSchema<any>;
declare const authConfigSchema: JOI.ObjectSchema<any>;
declare const blockletMetaSchema: JOI.ObjectSchema<any>;
declare const createBlockletSchema: (baseDir: string, { ensureMain, ensureFiles, ensureDist, ensureComponentStore, ...schemaOptions }?: {
    ensureMain?: boolean;
    ensureFiles?: boolean;
    ensureDist?: boolean;
    ensureComponentStore?: boolean;
}) => JOI.ObjectSchema;
export { blockletMetaSchema, blockletNameSchema, componentSchema, createBlockletSchema, descriptionSchema, distSchema, endpointSchema, engineSchema, environmentSchema, environmentNameSchema, interfaceSchema, logoSchema, mountPointSchema, navigationItemSchema, navigationSchema, personSchema, scriptsSchema, serviceSchema, signatureSchema, themeSchema, titleSchema, statsSchema, authConfigSchema, };
declare const _default: {
    blockletNameSchema: JOI.StringSchema<string>;
    componentSchema: JOI.ObjectSchema<any>;
    endpointSchema: JOI.ObjectSchema<any>;
    serviceSchema: JOI.ObjectSchema<any>;
    createBlockletSchema: (baseDir: string, { ensureMain, ensureFiles, ensureDist, ensureComponentStore, ...schemaOptions }?: {
        ensureMain?: boolean;
        ensureFiles?: boolean;
        ensureDist?: boolean;
        ensureComponentStore?: boolean;
    }) => JOI.ObjectSchema<any>;
    interfaceSchema: JOI.ObjectSchema<any>;
    environmentSchema: JOI.ObjectSchema<any>;
    environmentNameSchema: JOI.StringSchema<string>;
    scriptsSchema: JOI.ObjectSchema<any>;
    personSchema: JOI.ObjectSchema<any>;
    distSchema: JOI.ObjectSchema<any>;
    titleSchema: JOI.StringSchema<string>;
    descriptionSchema: JOI.StringSchema<string>;
    logoSchema: JOI.StringSchema<string>;
    navigationSchema: JOI.ArraySchema<any[]>;
    themeSchema: JOI.ObjectSchema<any>;
    mountPointSchema: JOI.StringSchema<string>;
    authConfigSchema: JOI.ObjectSchema<any>;
};
export default _default;
