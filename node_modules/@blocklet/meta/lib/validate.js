"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fixAndValidateService = exports.validateMeta = void 0;
const schema_1 = require("./schema");
const service_1 = require("./service");
const fixAndValidateService = (meta) => {
    if (!meta.interfaces) {
        return meta;
    }
    if (!meta.interfaces.length) {
        return meta;
    }
    meta.interfaces.forEach((d) => {
        if (d.services && d.services.length) {
            d.services.forEach((s) => {
                s.config = (0, service_1.getServiceConfig)(s.name, s.config, { validate: true });
            });
        }
    });
    return meta;
};
exports.fixAndValidateService = fixAndValidateService;
const validateMeta = (meta, { ensureMain = false, ensureFiles = false, ensureDist = false, ensureComponentStore = true, schemaOptions = {}, } = {}) => {
    const schema = (0, schema_1.createBlockletSchema)(null, Object.assign({ ensureMain,
        ensureFiles,
        ensureDist,
        ensureComponentStore }, schemaOptions));
    const { value, error } = schema.validate(meta);
    if (error) {
        throw new Error(`Invalid blocklet meta: ${error.details.map((x) => x.message).join(', ')}`);
    }
    return value;
};
exports.validateMeta = validateMeta;
exports.default = validateMeta;
