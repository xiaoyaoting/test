"use strict";
const mcrypto_1 = require("@ocap/mcrypto");
const wallet_1 = require("@ocap/wallet");
const did_1 = require("@arcblock/did");
const did_ext_1 = require("@arcblock/did-ext");
/**
 * Gen DID from blocklet did and nodeSk
 *
 * Spec: https://github.com/ArcBlock/ABT-DID-Protocol#request-did-authentication
 */
const getBlockletWallet = (blockletDid, nodeSk, type = { role: mcrypto_1.types.RoleType.ROLE_APPLICATION }, index = 0) => {
    if (!(0, did_1.isValid)(blockletDid)) {
        try {
            return (0, wallet_1.fromSecretKey)(blockletDid, type);
        }
        catch (err) {
            throw new Error(`Cannot get blocklet wallet with invalid blocklet did or custom sk: ${err.message}`);
        }
    }
    if (!nodeSk) {
        throw new Error('Cannot get blocklet wallet with empty node sk');
    }
    return (0, did_ext_1.fromAppDid)(blockletDid, nodeSk, type, index);
};
module.exports = getBlockletWallet;
