import { TNotificationInput, TSendOptions } from '../types/notification';
export type TNotificationSender = {
    appDid: string;
    appSk: string;
};
/**
 * @param {String|Array} receiver
 * @param {Object} notification
 * @param {{
 *   appDid: String
 *   appSk: String
 * }} sender
 * @param {String|Number} port port of abtnode service endpoint
 * @param {Object} options
 * @returns
 */
declare const sendToUser: (receiver: string | string[], notification: TNotificationInput, { appDid, appSk }: TNotificationSender, port?: string, options?: {}) => Promise<any>;
declare const sendToAppChannel: (channel: string, event: string, notification: TNotificationInput, { appDid, appSk }: TNotificationSender, port?: string, options?: TSendOptions) => Promise<any>;
export { sendToUser };
export { sendToAppChannel };
declare const _default: {
    sendToUser: (receiver: string | string[], notification: TNotificationInput, { appDid, appSk }: TNotificationSender, port?: string, options?: {}) => Promise<any>;
    sendToAppChannel: (channel: string, event: string, notification: TNotificationInput, { appDid, appSk }: TNotificationSender, port?: string, options?: TSendOptions) => Promise<any>;
};
export default _default;
