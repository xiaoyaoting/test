{"version":3,"sources":["../src/client.js"],"names":["createExtensionMethods","require","GraphQLClientBase","GraphQLClient","constructor","endpoint","autoInit","getContext","catch","err","console","warn","message","module","exports"],"mappings":";;AAAA,MAAM,EAAEA,sBAAF,KAA6BC,QAAQ,aAAR,CAAnC;AACA,MAAMC,oBAAoBD,QAAQ,QAAR,CAA1B;;AAEA;;;;;;;;;;;;;AAaA,MAAME,aAAN,SAA4BD,iBAA5B,CAA8C;AAC5C;;;;;;;;;;;;AAYAE,cAAYC,QAAZ,EAAsBC,WAAW,IAAjC,EAAuC;AACrC,UAAMD,QAAN;AACAL,2BAAuB,IAAvB;;AAEA;AACA,QAAIM,QAAJ,EAAc;AACZ,WAAKC,UAAL,GAAkBC,KAAlB,CAAyBC,GAAD,IAAS;AAC/BC,gBAAQC,IAAR,CAAa,0BAAb,EAAyCF,IAAIG,OAA7C;AACD,OAFD;AAGD;AACF;AAvB2C;;AA0B9CC,OAAOC,OAAP,GAAiBX,aAAjB","file":"client.js","sourcesContent":["const { createExtensionMethods } = require('./extension');\nconst GraphQLClientBase = require('./base');\n\n/**\n * An http client that can read/write data to a forge powered blockchain node, can be used in both node.js and browser.\n *\n * Please note that, due to internal implementation of google-protobuf, all `repeated fields` names are suffixed with `List`\n *\n * @class\n * @example\n * const GraphQLClient = require('@ocap/client');\n *\n * const client = new GraphQLClient('https://beta.abtnetwork.io/api');\n *\n * const res = await client.getChainInfo();\n */\nclass GraphQLClient extends GraphQLClientBase {\n  /**\n   * Create an instance of GraphQLClient\n   *\n   * @constructor\n   * @param {string} endpoint the graphql endpoint of the chain\n   * @param {boolean} autoInit whether auto warmup context\n   * @see GraphQLClient#getQueries\n   * @see GraphQLClient#getMutations\n   * @see GraphQLClient#getSubscriptions\n   * @see GraphQLClient#getTxSendMethods\n   * @see GraphQLClient#getTxEncodeMethods\n   */\n  constructor(endpoint, autoInit = true) {\n    super(endpoint);\n    createExtensionMethods(this);\n\n    // warmup the context\n    if (autoInit) {\n      this.getContext().catch((err) => {\n        console.warn('failed to warmup context', err.message);\n      });\n    }\n  }\n}\n\nmodule.exports = GraphQLClient;\n"]}